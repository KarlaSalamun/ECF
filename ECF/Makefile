# Makefile.in generated by automake 1.15.1 from Makefile.am.
# ECF/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2017 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/libecf
pkgincludedir = $(includedir)/libecf
pkglibdir = $(libdir)/libecf
pkglibexecdir = $(libexecdir)/libecf
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = x86_64-pc-linux-gnu
subdir = ECF
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(pkginclude_binary_HEADERS) \
	$(pkginclude_bitstring_HEADERS) \
	$(pkginclude_floatingpoint_HEADERS) $(pkginclude_main_HEADERS) \
	$(pkginclude_permutation_HEADERS) $(pkginclude_tree_HEADERS) \
	$(pkginclude_xcs_HEADERS) $(pkginclude_xml_HEADERS) \
	$(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" \
	"$(DESTDIR)$(pkginclude_binarydir)" \
	"$(DESTDIR)$(pkginclude_bitstringdir)" \
	"$(DESTDIR)$(pkginclude_floatingpointdir)" \
	"$(DESTDIR)$(pkginclude_maindir)" \
	"$(DESTDIR)$(pkginclude_permutationdir)" \
	"$(DESTDIR)$(pkginclude_treedir)" \
	"$(DESTDIR)$(pkginclude_xcsdir)" \
	"$(DESTDIR)$(pkginclude_xmldir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
libecf_la_LIBADD =
am__libecf_la_SOURCES_DIST = Algorithm.cpp AlgRouletteWheel.cpp \
	AlgSteadyStateTournament.cpp AlgParticleSwarmOptimization.cpp \
	AlgElimination.cpp AlgRandomSearch.cpp AlgGeneticAnnealing.cpp \
	AlgGenHookeJeeves.cpp AlgDifferentialEvolution.cpp \
	AlgArtificialBeeColony.cpp AlgClonalg.cpp AlgOptIA.cpp \
	AlgEvolutionStrategy.cpp AlgNSGA2.cpp AlgCuckooSearch.cpp \
	Crossover.cpp Deme.cpp FitnessMax.cpp FitnessMin.cpp \
	MOFitness.cpp Genotype.cpp HallOfFame.cpp Individual.cpp \
	Logger.cpp Migration.cpp Mutation.cpp Population.cpp \
	Registry.cpp SelBestOp.cpp SelFitnessProportionalOp.cpp \
	SelRandomOp.cpp SelWorstOp.cpp SimpleRandomizer.cpp \
	StatCalc.cpp State.cpp TermFitnessValOp.cpp TermMaxGenOp.cpp \
	TermMaxTimeOp.cpp TermStagnationOp.cpp TermMaxEvalOp.cpp \
	binary/Binary.cpp binary/BinaryCrsHalfUniform.cpp \
	binary/BinaryCrsMasked.cpp binary/BinaryCrsNonGeometric.cpp \
	binary/BinaryCrsOnePoint.cpp \
	binary/BinaryCrsRandomRespectful.cpp \
	binary/BinaryCrsReducedSurrogate.cpp \
	binary/BinaryCrsSegmented.cpp binary/BinaryCrsShuffle.cpp \
	binary/BinaryCrsTwoPoint.cpp binary/BinaryCrsUniform.cpp \
	binary/BinaryMutMix.cpp binary/BinaryMutSimple.cpp \
	floatingpoint/FloatingPoint.cpp \
	floatingpoint/FloatingPointCrsArithmetic.cpp \
	floatingpoint/FloatingPointCrsArithmeticSimple.cpp \
	floatingpoint/FloatingPointCrsArithmeticSingle.cpp \
	floatingpoint/FloatingPointCrsAverage.cpp \
	floatingpoint/FloatingPointCrsBga.cpp \
	floatingpoint/FloatingPointCrsBlx.cpp \
	floatingpoint/FloatingPointCrsBlxAlpha.cpp \
	floatingpoint/FloatingPointCrsBlxAlphaBeta.cpp \
	floatingpoint/FloatingPointCrsDiscrete.cpp \
	floatingpoint/FloatingPointCrsFlat.cpp \
	floatingpoint/FloatingPointCrsHeuristic.cpp \
	floatingpoint/FloatingPointCrsLocal.cpp \
	floatingpoint/FloatingPointCrsOnePoint.cpp \
	floatingpoint/FloatingPointCrsRandom.cpp \
	floatingpoint/FloatingPointCrsSbx.cpp \
	floatingpoint/FloatingPointMutSimple.cpp \
	bitstring/BitStringCrsOnePoint.cpp \
	bitstring/BitStringMutSimple.cpp \
	bitstring/BitStringCrsUniform.cpp \
	bitstring/BitStringMutMix.cpp tree/Cos.cpp tree/Node.cpp \
	tree/Primitive.cpp tree/PrimitiveSet.cpp tree/Sin.cpp \
	tree/Tree.cpp tree/TreeCrxSimple.cpp \
	tree/TreeCrxContextPreserved.cpp tree/TreeCrxOnePoint.cpp \
	tree/TreeCrxSizeFair.cpp tree/TreeCrxUniform.cpp \
	tree/TreeMutPermutation.cpp tree/TreeMutGauss.cpp \
	tree/TreeMutHoist.cpp tree/TreeMutNodeComplement.cpp \
	tree/TreeMutNodeReplace.cpp tree/TreeMutShrink.cpp \
	tree/TreeMutSubtree.cpp permutation/Permutation.cpp \
	permutation/PermutationCrsCOSA.cpp \
	permutation/PermutationCrsCyclic.cpp \
	permutation/PermutationCrsCyclic2.cpp \
	permutation/PermutationCrsDPX.cpp \
	permutation/PermutationCrsOBX.cpp \
	permutation/PermutationCrsOPX.cpp \
	permutation/PermutationCrsOX.cpp \
	permutation/PermutationCrsOX2.cpp \
	permutation/PermutationCrsPBX.cpp \
	permutation/PermutationCrsPMX.cpp \
	permutation/PermutationCrsSPX.cpp \
	permutation/PermutationCrsULX.cpp \
	permutation/PermutationCrsUPMX.cpp \
	permutation/PermutationMutIns.cpp \
	permutation/PermutationMutInv.cpp \
	permutation/PermutationMutToggle.cpp xml/xmlParser.cpp \
	xcs/AlgXCS.cpp xcs/Classifier.cpp xcs/Environment.cpp \
	xcs/XCSParams.cpp AlgAEliGPEA2.cpp AlgAEliGPEA.cpp \
	AlgSGenGPEA.cpp Communicator.cpp
am_libecf_la_OBJECTS = libecf_la-Algorithm.lo \
	libecf_la-AlgRouletteWheel.lo \
	libecf_la-AlgSteadyStateTournament.lo \
	libecf_la-AlgParticleSwarmOptimization.lo \
	libecf_la-AlgElimination.lo \
	libecf_la-AlgRandomSearch.lo \
	libecf_la-AlgGeneticAnnealing.lo \
	libecf_la-AlgGenHookeJeeves.lo \
	libecf_la-AlgDifferentialEvolution.lo \
	libecf_la-AlgArtificialBeeColony.lo \
	libecf_la-AlgClonalg.lo libecf_la-AlgOptIA.lo \
	libecf_la-AlgEvolutionStrategy.lo \
	libecf_la-AlgNSGA2.lo libecf_la-AlgCuckooSearch.lo \
	libecf_la-Crossover.lo libecf_la-Deme.lo \
	libecf_la-FitnessMax.lo libecf_la-FitnessMin.lo \
	libecf_la-MOFitness.lo libecf_la-Genotype.lo \
	libecf_la-HallOfFame.lo libecf_la-Individual.lo \
	libecf_la-Logger.lo libecf_la-Migration.lo \
	libecf_la-Mutation.lo libecf_la-Population.lo \
	libecf_la-Registry.lo libecf_la-SelBestOp.lo \
	libecf_la-SelFitnessProportionalOp.lo \
	libecf_la-SelRandomOp.lo libecf_la-SelWorstOp.lo \
	libecf_la-SimpleRandomizer.lo libecf_la-StatCalc.lo \
	libecf_la-State.lo libecf_la-TermFitnessValOp.lo \
	libecf_la-TermMaxGenOp.lo \
	libecf_la-TermMaxTimeOp.lo \
	libecf_la-TermStagnationOp.lo \
	libecf_la-TermMaxEvalOp.lo libecf_la-Binary.lo \
	libecf_la-BinaryCrsHalfUniform.lo \
	libecf_la-BinaryCrsMasked.lo \
	libecf_la-BinaryCrsNonGeometric.lo \
	libecf_la-BinaryCrsOnePoint.lo \
	libecf_la-BinaryCrsRandomRespectful.lo \
	libecf_la-BinaryCrsReducedSurrogate.lo \
	libecf_la-BinaryCrsSegmented.lo \
	libecf_la-BinaryCrsShuffle.lo \
	libecf_la-BinaryCrsTwoPoint.lo \
	libecf_la-BinaryCrsUniform.lo \
	libecf_la-BinaryMutMix.lo \
	libecf_la-BinaryMutSimple.lo \
	libecf_la-FloatingPoint.lo \
	libecf_la-FloatingPointCrsArithmetic.lo \
	libecf_la-FloatingPointCrsArithmeticSimple.lo \
	libecf_la-FloatingPointCrsArithmeticSingle.lo \
	libecf_la-FloatingPointCrsAverage.lo \
	libecf_la-FloatingPointCrsBga.lo \
	libecf_la-FloatingPointCrsBlx.lo \
	libecf_la-FloatingPointCrsBlxAlpha.lo \
	libecf_la-FloatingPointCrsBlxAlphaBeta.lo \
	libecf_la-FloatingPointCrsDiscrete.lo \
	libecf_la-FloatingPointCrsFlat.lo \
	libecf_la-FloatingPointCrsHeuristic.lo \
	libecf_la-FloatingPointCrsLocal.lo \
	libecf_la-FloatingPointCrsOnePoint.lo \
	libecf_la-FloatingPointCrsRandom.lo \
	libecf_la-FloatingPointCrsSbx.lo \
	libecf_la-FloatingPointMutSimple.lo \
	libecf_la-BitStringCrsOnePoint.lo \
	libecf_la-BitStringMutSimple.lo \
	libecf_la-BitStringCrsUniform.lo \
	libecf_la-BitStringMutMix.lo libecf_la-Cos.lo \
	libecf_la-Node.lo libecf_la-Primitive.lo \
	libecf_la-PrimitiveSet.lo libecf_la-Sin.lo \
	libecf_la-Tree.lo libecf_la-TreeCrxSimple.lo \
	libecf_la-TreeCrxContextPreserved.lo \
	libecf_la-TreeCrxOnePoint.lo \
	libecf_la-TreeCrxSizeFair.lo \
	libecf_la-TreeCrxUniform.lo \
	libecf_la-TreeMutPermutation.lo \
	libecf_la-TreeMutGauss.lo libecf_la-TreeMutHoist.lo \
	libecf_la-TreeMutNodeComplement.lo \
	libecf_la-TreeMutNodeReplace.lo \
	libecf_la-TreeMutShrink.lo \
	libecf_la-TreeMutSubtree.lo \
	libecf_la-Permutation.lo \
	libecf_la-PermutationCrsCOSA.lo \
	libecf_la-PermutationCrsCyclic.lo \
	libecf_la-PermutationCrsCyclic2.lo \
	libecf_la-PermutationCrsDPX.lo \
	libecf_la-PermutationCrsOBX.lo \
	libecf_la-PermutationCrsOPX.lo \
	libecf_la-PermutationCrsOX.lo \
	libecf_la-PermutationCrsOX2.lo \
	libecf_la-PermutationCrsPBX.lo \
	libecf_la-PermutationCrsPMX.lo \
	libecf_la-PermutationCrsSPX.lo \
	libecf_la-PermutationCrsULX.lo \
	libecf_la-PermutationCrsUPMX.lo \
	libecf_la-PermutationMutIns.lo \
	libecf_la-PermutationMutInv.lo \
	libecf_la-PermutationMutToggle.lo \
	libecf_la-xmlParser.lo libecf_la-AlgXCS.lo \
	libecf_la-Classifier.lo libecf_la-Environment.lo \
	libecf_la-XCSParams.lo
#am_libecf_la_OBJECTS = libecf_la-AlgAEliGPEA2.lo \
#	libecf_la-AlgAEliGPEA.lo libecf_la-AlgSGenGPEA.lo \
#	libecf_la-Communicator.lo libecf_la-Algorithm.lo \
#	libecf_la-AlgRouletteWheel.lo \
#	libecf_la-AlgSteadyStateTournament.lo \
#	libecf_la-AlgParticleSwarmOptimization.lo \
#	libecf_la-AlgElimination.lo \
#	libecf_la-AlgRandomSearch.lo \
#	libecf_la-AlgGeneticAnnealing.lo \
#	libecf_la-AlgGenHookeJeeves.lo \
#	libecf_la-AlgDifferentialEvolution.lo \
#	libecf_la-AlgArtificialBeeColony.lo \
#	libecf_la-AlgClonalg.lo libecf_la-AlgOptIA.lo \
#	libecf_la-AlgEvolutionStrategy.lo \
#	libecf_la-AlgNSGA2.lo libecf_la-AlgCuckooSearch.lo \
#	libecf_la-Crossover.lo libecf_la-Deme.lo \
#	libecf_la-FitnessMax.lo libecf_la-FitnessMin.lo \
#	libecf_la-MOFitness.lo libecf_la-Genotype.lo \
#	libecf_la-HallOfFame.lo libecf_la-Individual.lo \
#	libecf_la-Logger.lo libecf_la-Migration.lo \
#	libecf_la-Mutation.lo libecf_la-Population.lo \
#	libecf_la-Registry.lo libecf_la-SelBestOp.lo \
#	libecf_la-SelFitnessProportionalOp.lo \
#	libecf_la-SelRandomOp.lo libecf_la-SelWorstOp.lo \
#	libecf_la-SimpleRandomizer.lo libecf_la-StatCalc.lo \
#	libecf_la-State.lo libecf_la-TermFitnessValOp.lo \
#	libecf_la-TermMaxGenOp.lo libecf_la-TermMaxTimeOp.lo \
#	libecf_la-TermStagnationOp.lo \
#	libecf_la-TermMaxEvalOp.lo libecf_la-Binary.lo \
#	libecf_la-BinaryCrsHalfUniform.lo \
#	libecf_la-BinaryCrsMasked.lo \
#	libecf_la-BinaryCrsNonGeometric.lo \
#	libecf_la-BinaryCrsOnePoint.lo \
#	libecf_la-BinaryCrsRandomRespectful.lo \
#	libecf_la-BinaryCrsReducedSurrogate.lo \
#	libecf_la-BinaryCrsSegmented.lo \
#	libecf_la-BinaryCrsShuffle.lo \
#	libecf_la-BinaryCrsTwoPoint.lo \
#	libecf_la-BinaryCrsUniform.lo \
#	libecf_la-BinaryMutMix.lo \
#	libecf_la-BinaryMutSimple.lo \
#	libecf_la-FloatingPoint.lo \
#	libecf_la-FloatingPointCrsArithmetic.lo \
#	libecf_la-FloatingPointCrsArithmeticSimple.lo \
#	libecf_la-FloatingPointCrsArithmeticSingle.lo \
#	libecf_la-FloatingPointCrsAverage.lo \
#	libecf_la-FloatingPointCrsBga.lo \
#	libecf_la-FloatingPointCrsBlx.lo \
#	libecf_la-FloatingPointCrsBlxAlpha.lo \
#	libecf_la-FloatingPointCrsBlxAlphaBeta.lo \
#	libecf_la-FloatingPointCrsDiscrete.lo \
#	libecf_la-FloatingPointCrsFlat.lo \
#	libecf_la-FloatingPointCrsHeuristic.lo \
#	libecf_la-FloatingPointCrsLocal.lo \
#	libecf_la-FloatingPointCrsOnePoint.lo \
#	libecf_la-FloatingPointCrsRandom.lo \
#	libecf_la-FloatingPointCrsSbx.lo \
#	libecf_la-FloatingPointMutSimple.lo \
#	libecf_la-BitStringCrsOnePoint.lo \
#	libecf_la-BitStringMutSimple.lo \
#	libecf_la-BitStringCrsUniform.lo \
#	libecf_la-BitStringMutMix.lo libecf_la-Cos.lo \
#	libecf_la-Node.lo libecf_la-Primitive.lo \
#	libecf_la-PrimitiveSet.lo libecf_la-Sin.lo \
#	libecf_la-Tree.lo libecf_la-TreeCrxSimple.lo \
#	libecf_la-TreeCrxContextPreserved.lo \
#	libecf_la-TreeCrxOnePoint.lo \
#	libecf_la-TreeCrxSizeFair.lo \
#	libecf_la-TreeCrxUniform.lo \
#	libecf_la-TreeMutPermutation.lo \
#	libecf_la-TreeMutGauss.lo libecf_la-TreeMutHoist.lo \
#	libecf_la-TreeMutNodeComplement.lo \
#	libecf_la-TreeMutNodeReplace.lo \
#	libecf_la-TreeMutShrink.lo \
#	libecf_la-TreeMutSubtree.lo libecf_la-Permutation.lo \
#	libecf_la-PermutationCrsCOSA.lo \
#	libecf_la-PermutationCrsCyclic.lo \
#	libecf_la-PermutationCrsCyclic2.lo \
#	libecf_la-PermutationCrsDPX.lo \
#	libecf_la-PermutationCrsOBX.lo \
#	libecf_la-PermutationCrsOPX.lo \
#	libecf_la-PermutationCrsOX.lo \
#	libecf_la-PermutationCrsOX2.lo \
#	libecf_la-PermutationCrsPBX.lo \
#	libecf_la-PermutationCrsPMX.lo \
#	libecf_la-PermutationCrsSPX.lo \
#	libecf_la-PermutationCrsULX.lo \
#	libecf_la-PermutationCrsUPMX.lo \
#	libecf_la-PermutationMutIns.lo \
#	libecf_la-PermutationMutInv.lo \
#	libecf_la-PermutationMutToggle.lo \
#	libecf_la-xmlParser.lo libecf_la-AlgXCS.lo \
#	libecf_la-Classifier.lo libecf_la-Environment.lo \
#	libecf_la-XCSParams.lo
libecf_la_OBJECTS = $(am_libecf_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(libecf_la_SOURCES)
DIST_SOURCES = $(am__libecf_la_SOURCES_DIST)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
HEADERS = $(pkginclude_binary_HEADERS) $(pkginclude_bitstring_HEADERS) \
	$(pkginclude_floatingpoint_HEADERS) $(pkginclude_main_HEADERS) \
	$(pkginclude_permutation_HEADERS) $(pkginclude_tree_HEADERS) \
	$(pkginclude_xcs_HEADERS) $(pkginclude_xml_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/karla/ECF_scheduling/missing aclocal-1.15
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AR = ar
AUTOCONF = ${SHELL} /home/karla/ECF_scheduling/missing autoconf
AUTOHEADER = ${SHELL} /home/karla/ECF_scheduling/missing autoheader
AUTOMAKE = ${SHELL} /home/karla/ECF_scheduling/missing automake-1.15
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DPACKAGE_NAME=\"libecf\" -DPACKAGE_TARNAME=\"libecf\" -DPACKAGE_VERSION=\"1.4.2\" -DPACKAGE_STRING=\"libecf\ 1.4.2\" -DPACKAGE_BUGREPORT=\"domagoj.jakobovic@fer.hr\" -DPACKAGE_URL=\"\" -DPACKAGE=\"libecf\" -DVERSION=\"1.4.2\" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_DLFCN_H=1 -DLT_OBJDIR=\".libs/\"
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
MAKEINFO = ${SHELL} /home/karla/ECF_scheduling/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = libecf
PACKAGE_BUGREPORT = domagoj.jakobovic@fer.hr
PACKAGE_NAME = libecf
PACKAGE_STRING = libecf 1.4.2
PACKAGE_TARNAME = libecf
PACKAGE_URL = 
PACKAGE_VERSION = 1.4.2
PATH_SEPARATOR = :
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
VERSION = 1.4.2
abs_builddir = /home/karla/ECF_scheduling/ECF
abs_srcdir = /home/karla/ECF_scheduling/ECF
abs_top_builddir = /home/karla/ECF_scheduling
abs_top_srcdir = /home/karla/ECF_scheduling
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-pc-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-pc-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/karla/ECF_scheduling/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
pkginclude_maindir = $(includedir)/ecf
pkginclude_treedir = $(includedir)/ecf/tree
pkginclude_binarydir = $(includedir)/ecf/binary
pkginclude_floatingpointdir = $(includedir)/ecf/floatingpoint
pkginclude_bitstringdir = $(includedir)/ecf/bitstring
pkginclude_permutationdir = $(includedir)/ecf/permutation
pkginclude_xmldir = $(includedir)/ecf/xml
pkginclude_xcsdir = $(includedir)/ecf/xcs
pkginclude_main_HEADERS = Algorithm.h \
	AlgRouletteWheel.h \
	AlgSteadyStateTournament.h \
	AlgParticleSwarmOptimization.h \
	AlgElimination.h \
	AlgGeneticAnnealing.h \
	AlgGenHookeJeeves.h \
	AlgRandomSearch.h \
	AlgDifferentialEvolution.h \
	AlgArtificialBeeColony.h \
	AlgClonalg.h \
	AlgOptIA.h \
	AlgEvolutionStrategy.h \
	AlgNSGA2.h \
	AlgCuckooSearch.h \
	Communicator.h \
	Context.h \
	Crossover.h \
	Deme.h \
	ECF.h \
	ECF_base.h \
	ECF_derived.h \
	ECF_macro.h \
	EvaluateOp.h \
	Fitness.h \
	FitnessMax.h \
	FitnessMin.h \
	MOFitness.h \
	Genotype.h \
	RealValueGenotype.h \
	HallOfFame.h \
	Individual.h \
	Logger.h \
	Migration.h \
	Mutation.h \
	Operator.h \
	Population.h \
	Randomizer.h \
	Registry.h \
	SelBestOp.h \
	SelectionOperator.h \
	SelFitnessProportionalOp.h \
	SelRandomOp.h \
	SelWorstOp.h \
	SimpleRandomizer.h \
	StatCalc.h \
	State.h \
	TermFitnessValOp.h \
	TermMaxGenOp.h \
	TermMaxTimeOp.h \
	TermMaxEvalOp.h \
	TermStagnationOp.h

pkginclude_tree_HEADERS = tree/Add.h \
	tree/Cos.h \
	tree/Div.h \
	tree/Mul.h \
	tree/Node.h \
	tree/Pos.h \
	tree/Max.h \
	tree/Min.h \
	tree/Neg.h \
	tree/Primitive.h \
	tree/PrimitiveSet.h \
	tree/Sin.h \
	tree/Sub.h \
	tree/Terminal.h \
	tree/Tree.h \
	tree/Tree_c.h \
	tree/TreeCrxSimple.h \
	tree/TreeCrxContextPreserved.h \
	tree/TreeCrxOnePoint.h \
	tree/TreeCrxSizeFair.h \
	tree/TreeCrxUniform.h \
	tree/TreeMutPermutation.h \
	tree/TreeMutGauss.h \
	tree/TreeMutHoist.h \
	tree/TreeMutNodeComplement.h \
	tree/TreeMutNodeReplace.h \
	tree/TreeMutShrink.h \
	tree/TreeMutSubtree.h

pkginclude_binary_HEADERS = binary/Binary.h \
	binary/BinaryCrsHalfUniform.h \
	binary/BinaryCrsMasked.h \
	binary/BinaryCrsNonGeometric.h \
	binary/BinaryCrsOnePoint.h \
	binary/BinaryCrsRandomRespectful.h \
	binary/BinaryCrsReducedSurrogate.h \
	binary/BinaryCrsSegmented.h \
	binary/BinaryCrsShuffle.h \
	binary/BinaryCrsTwoPoint.h \
	binary/BinaryCrsUniform.h \
	binary/BinaryMutSimple.h \
	binary/BinaryMutMix.h

pkginclude_floatingpoint_HEADERS = floatingpoint/FloatingPoint.h \
	floatingpoint/FloatingPointCrsArithmetic.h \
	floatingpoint/FloatingPointCrsArithmeticSimple.h \
	floatingpoint/FloatingPointCrsArithmeticSingle.h \
	floatingpoint/FloatingPointCrsAverage.h \
	floatingpoint/FloatingPointCrsBga.h \
	floatingpoint/FloatingPointCrsBlx.h \
	floatingpoint/FloatingPointCrsBlxAlpha.h \
	floatingpoint/FloatingPointCrsBlxAlphaBeta.h \
	floatingpoint/FloatingPointCrsDiscrete.h \
	floatingpoint/FloatingPointCrsFlat.h \
	floatingpoint/FloatingPointCrsHeuristic.h \
	floatingpoint/FloatingPointCrsLocal.h \
	floatingpoint/FloatingPointCrsOnePoint.h \
	floatingpoint/FloatingPointCrsRandom.h \
	floatingpoint/FloatingPointCrsSbx.h \
	floatingpoint/FloatingPointMutSimple.h

pkginclude_bitstring_HEADERS = bitstring/BitString.h \
	bitstring/BitStringCrsOnePoint.h \
	bitstring/BitStringMutSimple.h \
	bitstring/BitStringMutMix.h \
	bitstring/BitStringCrsUniform.h

pkginclude_permutation_HEADERS = permutation/Permutation.h \
	permutation/PermutationCrsCOSA.h \
	permutation/PermutationCrsCyclic.h \
	permutation/PermutationCrsCyclic2.h \
	permutation/PermutationCrsDPX.h \
	permutation/PermutationCrsOBX.h \
	permutation/PermutationCrsOPX.h \
	permutation/PermutationCrsOX.h \
	permutation/PermutationCrsOX2.h \
	permutation/PermutationCrsPBX.h \
	permutation/PermutationCrsPMX.h \
	permutation/PermutationCrsSPX.h \
	permutation/PermutationCrsULX.h \
	permutation/PermutationCrsUPMX.h \
	permutation/PermutationMutIns.h \
	permutation/PermutationMutInv.h \
	permutation/PermutationMutToggle.h

pkginclude_xml_HEADERS = xml/xmlParser.h
pkginclude_xcs_HEADERS = xcs/AlgXCS.h \
	xcs/Classifier.h \
	xcs/ClassifierParams.h \
	xcs/Environment.h \
	xcs/XCSParams.h

lib_LTLIBRARIES = libecf.la
libecf_la_SOURCES = Algorithm.cpp AlgRouletteWheel.cpp \
	AlgSteadyStateTournament.cpp \
	AlgParticleSwarmOptimization.cpp AlgElimination.cpp \
	AlgRandomSearch.cpp AlgGeneticAnnealing.cpp \
	AlgGenHookeJeeves.cpp AlgDifferentialEvolution.cpp \
	AlgArtificialBeeColony.cpp AlgClonalg.cpp \
	AlgOptIA.cpp AlgEvolutionStrategy.cpp AlgNSGA2.cpp \
	AlgCuckooSearch.cpp Crossover.cpp Deme.cpp \
	FitnessMax.cpp FitnessMin.cpp MOFitness.cpp \
	Genotype.cpp HallOfFame.cpp Individual.cpp \
	Logger.cpp Migration.cpp Mutation.cpp \
	Population.cpp Registry.cpp SelBestOp.cpp \
	SelFitnessProportionalOp.cpp SelRandomOp.cpp \
	SelWorstOp.cpp SimpleRandomizer.cpp StatCalc.cpp \
	State.cpp TermFitnessValOp.cpp TermMaxGenOp.cpp \
	TermMaxTimeOp.cpp TermStagnationOp.cpp \
	TermMaxEvalOp.cpp binary/Binary.cpp \
	binary/BinaryCrsHalfUniform.cpp \
	binary/BinaryCrsMasked.cpp \
	binary/BinaryCrsNonGeometric.cpp \
	binary/BinaryCrsOnePoint.cpp \
	binary/BinaryCrsRandomRespectful.cpp \
	binary/BinaryCrsReducedSurrogate.cpp \
	binary/BinaryCrsSegmented.cpp \
	binary/BinaryCrsShuffle.cpp \
	binary/BinaryCrsTwoPoint.cpp \
	binary/BinaryCrsUniform.cpp binary/BinaryMutMix.cpp \
	binary/BinaryMutSimple.cpp \
	floatingpoint/FloatingPoint.cpp \
	floatingpoint/FloatingPointCrsArithmetic.cpp \
	floatingpoint/FloatingPointCrsArithmeticSimple.cpp \
	floatingpoint/FloatingPointCrsArithmeticSingle.cpp \
	floatingpoint/FloatingPointCrsAverage.cpp \
	floatingpoint/FloatingPointCrsBga.cpp \
	floatingpoint/FloatingPointCrsBlx.cpp \
	floatingpoint/FloatingPointCrsBlxAlpha.cpp \
	floatingpoint/FloatingPointCrsBlxAlphaBeta.cpp \
	floatingpoint/FloatingPointCrsDiscrete.cpp \
	floatingpoint/FloatingPointCrsFlat.cpp \
	floatingpoint/FloatingPointCrsHeuristic.cpp \
	floatingpoint/FloatingPointCrsLocal.cpp \
	floatingpoint/FloatingPointCrsOnePoint.cpp \
	floatingpoint/FloatingPointCrsRandom.cpp \
	floatingpoint/FloatingPointCrsSbx.cpp \
	floatingpoint/FloatingPointMutSimple.cpp \
	bitstring/BitStringCrsOnePoint.cpp \
	bitstring/BitStringMutSimple.cpp \
	bitstring/BitStringCrsUniform.cpp \
	bitstring/BitStringMutMix.cpp tree/Cos.cpp \
	tree/Node.cpp tree/Primitive.cpp \
	tree/PrimitiveSet.cpp tree/Sin.cpp tree/Tree.cpp \
	tree/TreeCrxSimple.cpp \
	tree/TreeCrxContextPreserved.cpp \
	tree/TreeCrxOnePoint.cpp tree/TreeCrxSizeFair.cpp \
	tree/TreeCrxUniform.cpp tree/TreeMutPermutation.cpp \
	tree/TreeMutGauss.cpp tree/TreeMutHoist.cpp \
	tree/TreeMutNodeComplement.cpp \
	tree/TreeMutNodeReplace.cpp tree/TreeMutShrink.cpp \
	tree/TreeMutSubtree.cpp permutation/Permutation.cpp \
	permutation/PermutationCrsCOSA.cpp \
	permutation/PermutationCrsCyclic.cpp \
	permutation/PermutationCrsCyclic2.cpp \
	permutation/PermutationCrsDPX.cpp \
	permutation/PermutationCrsOBX.cpp \
	permutation/PermutationCrsOPX.cpp \
	permutation/PermutationCrsOX.cpp \
	permutation/PermutationCrsOX2.cpp \
	permutation/PermutationCrsPBX.cpp \
	permutation/PermutationCrsPMX.cpp \
	permutation/PermutationCrsSPX.cpp \
	permutation/PermutationCrsULX.cpp \
	permutation/PermutationCrsUPMX.cpp \
	permutation/PermutationMutIns.cpp \
	permutation/PermutationMutInv.cpp \
	permutation/PermutationMutToggle.cpp \
	xml/xmlParser.cpp xcs/AlgXCS.cpp xcs/Classifier.cpp \
	xcs/Environment.cpp xcs/XCSParams.cpp
#libecf_la_SOURCES = AlgAEliGPEA2.cpp AlgAEliGPEA.cpp \
#	AlgSGenGPEA.cpp Communicator.cpp Algorithm.cpp \
#	AlgRouletteWheel.cpp AlgSteadyStateTournament.cpp \
#	AlgParticleSwarmOptimization.cpp AlgElimination.cpp \
#	AlgRandomSearch.cpp AlgGeneticAnnealing.cpp \
#	AlgGenHookeJeeves.cpp AlgDifferentialEvolution.cpp \
#	AlgArtificialBeeColony.cpp AlgClonalg.cpp \
#	AlgOptIA.cpp AlgEvolutionStrategy.cpp AlgNSGA2.cpp \
#	AlgCuckooSearch.cpp Crossover.cpp Deme.cpp \
#	FitnessMax.cpp FitnessMin.cpp MOFitness.cpp \
#	Genotype.cpp HallOfFame.cpp Individual.cpp \
#	Logger.cpp Migration.cpp Mutation.cpp Population.cpp \
#	Registry.cpp SelBestOp.cpp \
#	SelFitnessProportionalOp.cpp SelRandomOp.cpp \
#	SelWorstOp.cpp SimpleRandomizer.cpp StatCalc.cpp \
#	State.cpp TermFitnessValOp.cpp TermMaxGenOp.cpp \
#	TermMaxTimeOp.cpp TermStagnationOp.cpp \
#	TermMaxEvalOp.cpp binary/Binary.cpp \
#	binary/BinaryCrsHalfUniform.cpp \
#	binary/BinaryCrsMasked.cpp \
#	binary/BinaryCrsNonGeometric.cpp \
#	binary/BinaryCrsOnePoint.cpp \
#	binary/BinaryCrsRandomRespectful.cpp \
#	binary/BinaryCrsReducedSurrogate.cpp \
#	binary/BinaryCrsSegmented.cpp \
#	binary/BinaryCrsShuffle.cpp \
#	binary/BinaryCrsTwoPoint.cpp \
#	binary/BinaryCrsUniform.cpp binary/BinaryMutMix.cpp \
#	binary/BinaryMutSimple.cpp \
#	floatingpoint/FloatingPoint.cpp \
#	floatingpoint/FloatingPointCrsArithmetic.cpp \
#	floatingpoint/FloatingPointCrsArithmeticSimple.cpp \
#	floatingpoint/FloatingPointCrsArithmeticSingle.cpp \
#	floatingpoint/FloatingPointCrsAverage.cpp \
#	floatingpoint/FloatingPointCrsBga.cpp \
#	floatingpoint/FloatingPointCrsBlx.cpp \
#	floatingpoint/FloatingPointCrsBlxAlpha.cpp \
#	floatingpoint/FloatingPointCrsBlxAlphaBeta.cpp \
#	floatingpoint/FloatingPointCrsDiscrete.cpp \
#	floatingpoint/FloatingPointCrsFlat.cpp \
#	floatingpoint/FloatingPointCrsHeuristic.cpp \
#	floatingpoint/FloatingPointCrsLocal.cpp \
#	floatingpoint/FloatingPointCrsOnePoint.cpp \
#	floatingpoint/FloatingPointCrsRandom.cpp \
#	floatingpoint/FloatingPointCrsSbx.cpp \
#	floatingpoint/FloatingPointMutSimple.cpp \
#	bitstring/BitStringCrsOnePoint.cpp \
#	bitstring/BitStringMutSimple.cpp \
#	bitstring/BitStringCrsUniform.cpp \
#	bitstring/BitStringMutMix.cpp tree/Cos.cpp \
#	tree/Node.cpp tree/Primitive.cpp \
#	tree/PrimitiveSet.cpp tree/Sin.cpp tree/Tree.cpp \
#	tree/TreeCrxSimple.cpp \
#	tree/TreeCrxContextPreserved.cpp \
#	tree/TreeCrxOnePoint.cpp tree/TreeCrxSizeFair.cpp \
#	tree/TreeCrxUniform.cpp tree/TreeMutPermutation.cpp \
#	tree/TreeMutGauss.cpp tree/TreeMutHoist.cpp \
#	tree/TreeMutNodeComplement.cpp \
#	tree/TreeMutNodeReplace.cpp tree/TreeMutShrink.cpp \
#	tree/TreeMutSubtree.cpp permutation/Permutation.cpp \
#	permutation/PermutationCrsCOSA.cpp \
#	permutation/PermutationCrsCyclic.cpp \
#	permutation/PermutationCrsCyclic2.cpp \
#	permutation/PermutationCrsDPX.cpp \
#	permutation/PermutationCrsOBX.cpp \
#	permutation/PermutationCrsOPX.cpp \
#	permutation/PermutationCrsOX.cpp \
#	permutation/PermutationCrsOX2.cpp \
#	permutation/PermutationCrsPBX.cpp \
#	permutation/PermutationCrsPMX.cpp \
#	permutation/PermutationCrsSPX.cpp \
#	permutation/PermutationCrsULX.cpp \
#	permutation/PermutationCrsUPMX.cpp \
#	permutation/PermutationMutIns.cpp \
#	permutation/PermutationMutInv.cpp \
#	permutation/PermutationMutToggle.cpp \
#	xml/xmlParser.cpp xcs/AlgXCS.cpp xcs/Classifier.cpp \
#	xcs/Environment.cpp xcs/XCSParams.cpp
libecf_la_CPPFLAGS = -I$(top_srcdir) -I$(top_srcdir)/binary -I$(top_srcdir)/floatingpoint -I$(top_srcdir)/bitstring -I$(top_srcdir)/tree -I$(top_srcdir)/permutation -I$(top_srcdir)/xml -I$(top_srcdir)/xcs
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu ECF/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu ECF/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

libecf.la: $(libecf_la_OBJECTS) $(libecf_la_DEPENDENCIES) $(EXTRA_libecf_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(CXXLINK) -rpath $(libdir) $(libecf_la_OBJECTS) $(libecf_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libecf_la-AlgAEliGPEA.Plo
include ./$(DEPDIR)/libecf_la-AlgAEliGPEA2.Plo
include ./$(DEPDIR)/libecf_la-AlgArtificialBeeColony.Plo
include ./$(DEPDIR)/libecf_la-AlgClonalg.Plo
include ./$(DEPDIR)/libecf_la-AlgCuckooSearch.Plo
include ./$(DEPDIR)/libecf_la-AlgDifferentialEvolution.Plo
include ./$(DEPDIR)/libecf_la-AlgElimination.Plo
include ./$(DEPDIR)/libecf_la-AlgEvolutionStrategy.Plo
include ./$(DEPDIR)/libecf_la-AlgGenHookeJeeves.Plo
include ./$(DEPDIR)/libecf_la-AlgGeneticAnnealing.Plo
include ./$(DEPDIR)/libecf_la-AlgNSGA2.Plo
include ./$(DEPDIR)/libecf_la-AlgOptIA.Plo
include ./$(DEPDIR)/libecf_la-AlgParticleSwarmOptimization.Plo
include ./$(DEPDIR)/libecf_la-AlgRandomSearch.Plo
include ./$(DEPDIR)/libecf_la-AlgRouletteWheel.Plo
include ./$(DEPDIR)/libecf_la-AlgSGenGPEA.Plo
include ./$(DEPDIR)/libecf_la-AlgSteadyStateTournament.Plo
include ./$(DEPDIR)/libecf_la-AlgXCS.Plo
include ./$(DEPDIR)/libecf_la-Algorithm.Plo
include ./$(DEPDIR)/libecf_la-Binary.Plo
include ./$(DEPDIR)/libecf_la-BinaryCrsHalfUniform.Plo
include ./$(DEPDIR)/libecf_la-BinaryCrsMasked.Plo
include ./$(DEPDIR)/libecf_la-BinaryCrsNonGeometric.Plo
include ./$(DEPDIR)/libecf_la-BinaryCrsOnePoint.Plo
include ./$(DEPDIR)/libecf_la-BinaryCrsRandomRespectful.Plo
include ./$(DEPDIR)/libecf_la-BinaryCrsReducedSurrogate.Plo
include ./$(DEPDIR)/libecf_la-BinaryCrsSegmented.Plo
include ./$(DEPDIR)/libecf_la-BinaryCrsShuffle.Plo
include ./$(DEPDIR)/libecf_la-BinaryCrsTwoPoint.Plo
include ./$(DEPDIR)/libecf_la-BinaryCrsUniform.Plo
include ./$(DEPDIR)/libecf_la-BinaryMutMix.Plo
include ./$(DEPDIR)/libecf_la-BinaryMutSimple.Plo
include ./$(DEPDIR)/libecf_la-BitStringCrsOnePoint.Plo
include ./$(DEPDIR)/libecf_la-BitStringCrsUniform.Plo
include ./$(DEPDIR)/libecf_la-BitStringMutMix.Plo
include ./$(DEPDIR)/libecf_la-BitStringMutSimple.Plo
include ./$(DEPDIR)/libecf_la-Classifier.Plo
include ./$(DEPDIR)/libecf_la-Communicator.Plo
include ./$(DEPDIR)/libecf_la-Cos.Plo
include ./$(DEPDIR)/libecf_la-Crossover.Plo
include ./$(DEPDIR)/libecf_la-Deme.Plo
include ./$(DEPDIR)/libecf_la-Environment.Plo
include ./$(DEPDIR)/libecf_la-FitnessMax.Plo
include ./$(DEPDIR)/libecf_la-FitnessMin.Plo
include ./$(DEPDIR)/libecf_la-FloatingPoint.Plo
include ./$(DEPDIR)/libecf_la-FloatingPointCrsArithmetic.Plo
include ./$(DEPDIR)/libecf_la-FloatingPointCrsArithmeticSimple.Plo
include ./$(DEPDIR)/libecf_la-FloatingPointCrsArithmeticSingle.Plo
include ./$(DEPDIR)/libecf_la-FloatingPointCrsAverage.Plo
include ./$(DEPDIR)/libecf_la-FloatingPointCrsBga.Plo
include ./$(DEPDIR)/libecf_la-FloatingPointCrsBlx.Plo
include ./$(DEPDIR)/libecf_la-FloatingPointCrsBlxAlpha.Plo
include ./$(DEPDIR)/libecf_la-FloatingPointCrsBlxAlphaBeta.Plo
include ./$(DEPDIR)/libecf_la-FloatingPointCrsDiscrete.Plo
include ./$(DEPDIR)/libecf_la-FloatingPointCrsFlat.Plo
include ./$(DEPDIR)/libecf_la-FloatingPointCrsHeuristic.Plo
include ./$(DEPDIR)/libecf_la-FloatingPointCrsLocal.Plo
include ./$(DEPDIR)/libecf_la-FloatingPointCrsOnePoint.Plo
include ./$(DEPDIR)/libecf_la-FloatingPointCrsRandom.Plo
include ./$(DEPDIR)/libecf_la-FloatingPointCrsSbx.Plo
include ./$(DEPDIR)/libecf_la-FloatingPointMutSimple.Plo
include ./$(DEPDIR)/libecf_la-Genotype.Plo
include ./$(DEPDIR)/libecf_la-HallOfFame.Plo
include ./$(DEPDIR)/libecf_la-Individual.Plo
include ./$(DEPDIR)/libecf_la-Logger.Plo
include ./$(DEPDIR)/libecf_la-MOFitness.Plo
include ./$(DEPDIR)/libecf_la-Migration.Plo
include ./$(DEPDIR)/libecf_la-Mutation.Plo
include ./$(DEPDIR)/libecf_la-Node.Plo
include ./$(DEPDIR)/libecf_la-Permutation.Plo
include ./$(DEPDIR)/libecf_la-PermutationCrsCOSA.Plo
include ./$(DEPDIR)/libecf_la-PermutationCrsCyclic.Plo
include ./$(DEPDIR)/libecf_la-PermutationCrsCyclic2.Plo
include ./$(DEPDIR)/libecf_la-PermutationCrsDPX.Plo
include ./$(DEPDIR)/libecf_la-PermutationCrsOBX.Plo
include ./$(DEPDIR)/libecf_la-PermutationCrsOPX.Plo
include ./$(DEPDIR)/libecf_la-PermutationCrsOX.Plo
include ./$(DEPDIR)/libecf_la-PermutationCrsOX2.Plo
include ./$(DEPDIR)/libecf_la-PermutationCrsPBX.Plo
include ./$(DEPDIR)/libecf_la-PermutationCrsPMX.Plo
include ./$(DEPDIR)/libecf_la-PermutationCrsSPX.Plo
include ./$(DEPDIR)/libecf_la-PermutationCrsULX.Plo
include ./$(DEPDIR)/libecf_la-PermutationCrsUPMX.Plo
include ./$(DEPDIR)/libecf_la-PermutationMutIns.Plo
include ./$(DEPDIR)/libecf_la-PermutationMutInv.Plo
include ./$(DEPDIR)/libecf_la-PermutationMutToggle.Plo
include ./$(DEPDIR)/libecf_la-Population.Plo
include ./$(DEPDIR)/libecf_la-Primitive.Plo
include ./$(DEPDIR)/libecf_la-PrimitiveSet.Plo
include ./$(DEPDIR)/libecf_la-Registry.Plo
include ./$(DEPDIR)/libecf_la-SelBestOp.Plo
include ./$(DEPDIR)/libecf_la-SelFitnessProportionalOp.Plo
include ./$(DEPDIR)/libecf_la-SelRandomOp.Plo
include ./$(DEPDIR)/libecf_la-SelWorstOp.Plo
include ./$(DEPDIR)/libecf_la-SimpleRandomizer.Plo
include ./$(DEPDIR)/libecf_la-Sin.Plo
include ./$(DEPDIR)/libecf_la-StatCalc.Plo
include ./$(DEPDIR)/libecf_la-State.Plo
include ./$(DEPDIR)/libecf_la-TermFitnessValOp.Plo
include ./$(DEPDIR)/libecf_la-TermMaxEvalOp.Plo
include ./$(DEPDIR)/libecf_la-TermMaxGenOp.Plo
include ./$(DEPDIR)/libecf_la-TermMaxTimeOp.Plo
include ./$(DEPDIR)/libecf_la-TermStagnationOp.Plo
include ./$(DEPDIR)/libecf_la-Tree.Plo
include ./$(DEPDIR)/libecf_la-TreeCrxContextPreserved.Plo
include ./$(DEPDIR)/libecf_la-TreeCrxOnePoint.Plo
include ./$(DEPDIR)/libecf_la-TreeCrxSimple.Plo
include ./$(DEPDIR)/libecf_la-TreeCrxSizeFair.Plo
include ./$(DEPDIR)/libecf_la-TreeCrxUniform.Plo
include ./$(DEPDIR)/libecf_la-TreeMutGauss.Plo
include ./$(DEPDIR)/libecf_la-TreeMutHoist.Plo
include ./$(DEPDIR)/libecf_la-TreeMutNodeComplement.Plo
include ./$(DEPDIR)/libecf_la-TreeMutNodeReplace.Plo
include ./$(DEPDIR)/libecf_la-TreeMutPermutation.Plo
include ./$(DEPDIR)/libecf_la-TreeMutShrink.Plo
include ./$(DEPDIR)/libecf_la-TreeMutSubtree.Plo
include ./$(DEPDIR)/libecf_la-XCSParams.Plo
include ./$(DEPDIR)/libecf_la-xmlParser.Plo

.cpp.o:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(AM_V_CXX)$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LTCXXCOMPILE) -c -o $@ $<

libecf_la-Algorithm.lo: Algorithm.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-Algorithm.lo -MD -MP -MF $(DEPDIR)/libecf_la-Algorithm.Tpo -c -o libecf_la-Algorithm.lo `test -f 'Algorithm.cpp' || echo '$(srcdir)/'`Algorithm.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-Algorithm.Tpo $(DEPDIR)/libecf_la-Algorithm.Plo
#	$(AM_V_CXX)source='Algorithm.cpp' object='libecf_la-Algorithm.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-Algorithm.lo `test -f 'Algorithm.cpp' || echo '$(srcdir)/'`Algorithm.cpp

libecf_la-AlgRouletteWheel.lo: AlgRouletteWheel.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-AlgRouletteWheel.lo -MD -MP -MF $(DEPDIR)/libecf_la-AlgRouletteWheel.Tpo -c -o libecf_la-AlgRouletteWheel.lo `test -f 'AlgRouletteWheel.cpp' || echo '$(srcdir)/'`AlgRouletteWheel.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-AlgRouletteWheel.Tpo $(DEPDIR)/libecf_la-AlgRouletteWheel.Plo
#	$(AM_V_CXX)source='AlgRouletteWheel.cpp' object='libecf_la-AlgRouletteWheel.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-AlgRouletteWheel.lo `test -f 'AlgRouletteWheel.cpp' || echo '$(srcdir)/'`AlgRouletteWheel.cpp

libecf_la-AlgSteadyStateTournament.lo: AlgSteadyStateTournament.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-AlgSteadyStateTournament.lo -MD -MP -MF $(DEPDIR)/libecf_la-AlgSteadyStateTournament.Tpo -c -o libecf_la-AlgSteadyStateTournament.lo `test -f 'AlgSteadyStateTournament.cpp' || echo '$(srcdir)/'`AlgSteadyStateTournament.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-AlgSteadyStateTournament.Tpo $(DEPDIR)/libecf_la-AlgSteadyStateTournament.Plo
#	$(AM_V_CXX)source='AlgSteadyStateTournament.cpp' object='libecf_la-AlgSteadyStateTournament.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-AlgSteadyStateTournament.lo `test -f 'AlgSteadyStateTournament.cpp' || echo '$(srcdir)/'`AlgSteadyStateTournament.cpp

libecf_la-AlgParticleSwarmOptimization.lo: AlgParticleSwarmOptimization.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-AlgParticleSwarmOptimization.lo -MD -MP -MF $(DEPDIR)/libecf_la-AlgParticleSwarmOptimization.Tpo -c -o libecf_la-AlgParticleSwarmOptimization.lo `test -f 'AlgParticleSwarmOptimization.cpp' || echo '$(srcdir)/'`AlgParticleSwarmOptimization.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-AlgParticleSwarmOptimization.Tpo $(DEPDIR)/libecf_la-AlgParticleSwarmOptimization.Plo
#	$(AM_V_CXX)source='AlgParticleSwarmOptimization.cpp' object='libecf_la-AlgParticleSwarmOptimization.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-AlgParticleSwarmOptimization.lo `test -f 'AlgParticleSwarmOptimization.cpp' || echo '$(srcdir)/'`AlgParticleSwarmOptimization.cpp

libecf_la-AlgElimination.lo: AlgElimination.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-AlgElimination.lo -MD -MP -MF $(DEPDIR)/libecf_la-AlgElimination.Tpo -c -o libecf_la-AlgElimination.lo `test -f 'AlgElimination.cpp' || echo '$(srcdir)/'`AlgElimination.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-AlgElimination.Tpo $(DEPDIR)/libecf_la-AlgElimination.Plo
#	$(AM_V_CXX)source='AlgElimination.cpp' object='libecf_la-AlgElimination.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-AlgElimination.lo `test -f 'AlgElimination.cpp' || echo '$(srcdir)/'`AlgElimination.cpp

libecf_la-AlgRandomSearch.lo: AlgRandomSearch.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-AlgRandomSearch.lo -MD -MP -MF $(DEPDIR)/libecf_la-AlgRandomSearch.Tpo -c -o libecf_la-AlgRandomSearch.lo `test -f 'AlgRandomSearch.cpp' || echo '$(srcdir)/'`AlgRandomSearch.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-AlgRandomSearch.Tpo $(DEPDIR)/libecf_la-AlgRandomSearch.Plo
#	$(AM_V_CXX)source='AlgRandomSearch.cpp' object='libecf_la-AlgRandomSearch.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-AlgRandomSearch.lo `test -f 'AlgRandomSearch.cpp' || echo '$(srcdir)/'`AlgRandomSearch.cpp

libecf_la-AlgGeneticAnnealing.lo: AlgGeneticAnnealing.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-AlgGeneticAnnealing.lo -MD -MP -MF $(DEPDIR)/libecf_la-AlgGeneticAnnealing.Tpo -c -o libecf_la-AlgGeneticAnnealing.lo `test -f 'AlgGeneticAnnealing.cpp' || echo '$(srcdir)/'`AlgGeneticAnnealing.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-AlgGeneticAnnealing.Tpo $(DEPDIR)/libecf_la-AlgGeneticAnnealing.Plo
#	$(AM_V_CXX)source='AlgGeneticAnnealing.cpp' object='libecf_la-AlgGeneticAnnealing.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-AlgGeneticAnnealing.lo `test -f 'AlgGeneticAnnealing.cpp' || echo '$(srcdir)/'`AlgGeneticAnnealing.cpp

libecf_la-AlgGenHookeJeeves.lo: AlgGenHookeJeeves.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-AlgGenHookeJeeves.lo -MD -MP -MF $(DEPDIR)/libecf_la-AlgGenHookeJeeves.Tpo -c -o libecf_la-AlgGenHookeJeeves.lo `test -f 'AlgGenHookeJeeves.cpp' || echo '$(srcdir)/'`AlgGenHookeJeeves.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-AlgGenHookeJeeves.Tpo $(DEPDIR)/libecf_la-AlgGenHookeJeeves.Plo
#	$(AM_V_CXX)source='AlgGenHookeJeeves.cpp' object='libecf_la-AlgGenHookeJeeves.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-AlgGenHookeJeeves.lo `test -f 'AlgGenHookeJeeves.cpp' || echo '$(srcdir)/'`AlgGenHookeJeeves.cpp

libecf_la-AlgDifferentialEvolution.lo: AlgDifferentialEvolution.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-AlgDifferentialEvolution.lo -MD -MP -MF $(DEPDIR)/libecf_la-AlgDifferentialEvolution.Tpo -c -o libecf_la-AlgDifferentialEvolution.lo `test -f 'AlgDifferentialEvolution.cpp' || echo '$(srcdir)/'`AlgDifferentialEvolution.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-AlgDifferentialEvolution.Tpo $(DEPDIR)/libecf_la-AlgDifferentialEvolution.Plo
#	$(AM_V_CXX)source='AlgDifferentialEvolution.cpp' object='libecf_la-AlgDifferentialEvolution.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-AlgDifferentialEvolution.lo `test -f 'AlgDifferentialEvolution.cpp' || echo '$(srcdir)/'`AlgDifferentialEvolution.cpp

libecf_la-AlgArtificialBeeColony.lo: AlgArtificialBeeColony.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-AlgArtificialBeeColony.lo -MD -MP -MF $(DEPDIR)/libecf_la-AlgArtificialBeeColony.Tpo -c -o libecf_la-AlgArtificialBeeColony.lo `test -f 'AlgArtificialBeeColony.cpp' || echo '$(srcdir)/'`AlgArtificialBeeColony.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-AlgArtificialBeeColony.Tpo $(DEPDIR)/libecf_la-AlgArtificialBeeColony.Plo
#	$(AM_V_CXX)source='AlgArtificialBeeColony.cpp' object='libecf_la-AlgArtificialBeeColony.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-AlgArtificialBeeColony.lo `test -f 'AlgArtificialBeeColony.cpp' || echo '$(srcdir)/'`AlgArtificialBeeColony.cpp

libecf_la-AlgClonalg.lo: AlgClonalg.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-AlgClonalg.lo -MD -MP -MF $(DEPDIR)/libecf_la-AlgClonalg.Tpo -c -o libecf_la-AlgClonalg.lo `test -f 'AlgClonalg.cpp' || echo '$(srcdir)/'`AlgClonalg.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-AlgClonalg.Tpo $(DEPDIR)/libecf_la-AlgClonalg.Plo
#	$(AM_V_CXX)source='AlgClonalg.cpp' object='libecf_la-AlgClonalg.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-AlgClonalg.lo `test -f 'AlgClonalg.cpp' || echo '$(srcdir)/'`AlgClonalg.cpp

libecf_la-AlgOptIA.lo: AlgOptIA.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-AlgOptIA.lo -MD -MP -MF $(DEPDIR)/libecf_la-AlgOptIA.Tpo -c -o libecf_la-AlgOptIA.lo `test -f 'AlgOptIA.cpp' || echo '$(srcdir)/'`AlgOptIA.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-AlgOptIA.Tpo $(DEPDIR)/libecf_la-AlgOptIA.Plo
#	$(AM_V_CXX)source='AlgOptIA.cpp' object='libecf_la-AlgOptIA.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-AlgOptIA.lo `test -f 'AlgOptIA.cpp' || echo '$(srcdir)/'`AlgOptIA.cpp

libecf_la-AlgEvolutionStrategy.lo: AlgEvolutionStrategy.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-AlgEvolutionStrategy.lo -MD -MP -MF $(DEPDIR)/libecf_la-AlgEvolutionStrategy.Tpo -c -o libecf_la-AlgEvolutionStrategy.lo `test -f 'AlgEvolutionStrategy.cpp' || echo '$(srcdir)/'`AlgEvolutionStrategy.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-AlgEvolutionStrategy.Tpo $(DEPDIR)/libecf_la-AlgEvolutionStrategy.Plo
#	$(AM_V_CXX)source='AlgEvolutionStrategy.cpp' object='libecf_la-AlgEvolutionStrategy.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-AlgEvolutionStrategy.lo `test -f 'AlgEvolutionStrategy.cpp' || echo '$(srcdir)/'`AlgEvolutionStrategy.cpp

libecf_la-AlgNSGA2.lo: AlgNSGA2.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-AlgNSGA2.lo -MD -MP -MF $(DEPDIR)/libecf_la-AlgNSGA2.Tpo -c -o libecf_la-AlgNSGA2.lo `test -f 'AlgNSGA2.cpp' || echo '$(srcdir)/'`AlgNSGA2.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-AlgNSGA2.Tpo $(DEPDIR)/libecf_la-AlgNSGA2.Plo
#	$(AM_V_CXX)source='AlgNSGA2.cpp' object='libecf_la-AlgNSGA2.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-AlgNSGA2.lo `test -f 'AlgNSGA2.cpp' || echo '$(srcdir)/'`AlgNSGA2.cpp

libecf_la-AlgCuckooSearch.lo: AlgCuckooSearch.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-AlgCuckooSearch.lo -MD -MP -MF $(DEPDIR)/libecf_la-AlgCuckooSearch.Tpo -c -o libecf_la-AlgCuckooSearch.lo `test -f 'AlgCuckooSearch.cpp' || echo '$(srcdir)/'`AlgCuckooSearch.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-AlgCuckooSearch.Tpo $(DEPDIR)/libecf_la-AlgCuckooSearch.Plo
#	$(AM_V_CXX)source='AlgCuckooSearch.cpp' object='libecf_la-AlgCuckooSearch.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-AlgCuckooSearch.lo `test -f 'AlgCuckooSearch.cpp' || echo '$(srcdir)/'`AlgCuckooSearch.cpp

libecf_la-Crossover.lo: Crossover.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-Crossover.lo -MD -MP -MF $(DEPDIR)/libecf_la-Crossover.Tpo -c -o libecf_la-Crossover.lo `test -f 'Crossover.cpp' || echo '$(srcdir)/'`Crossover.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-Crossover.Tpo $(DEPDIR)/libecf_la-Crossover.Plo
#	$(AM_V_CXX)source='Crossover.cpp' object='libecf_la-Crossover.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-Crossover.lo `test -f 'Crossover.cpp' || echo '$(srcdir)/'`Crossover.cpp

libecf_la-Deme.lo: Deme.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-Deme.lo -MD -MP -MF $(DEPDIR)/libecf_la-Deme.Tpo -c -o libecf_la-Deme.lo `test -f 'Deme.cpp' || echo '$(srcdir)/'`Deme.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-Deme.Tpo $(DEPDIR)/libecf_la-Deme.Plo
#	$(AM_V_CXX)source='Deme.cpp' object='libecf_la-Deme.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-Deme.lo `test -f 'Deme.cpp' || echo '$(srcdir)/'`Deme.cpp

libecf_la-FitnessMax.lo: FitnessMax.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-FitnessMax.lo -MD -MP -MF $(DEPDIR)/libecf_la-FitnessMax.Tpo -c -o libecf_la-FitnessMax.lo `test -f 'FitnessMax.cpp' || echo '$(srcdir)/'`FitnessMax.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-FitnessMax.Tpo $(DEPDIR)/libecf_la-FitnessMax.Plo
#	$(AM_V_CXX)source='FitnessMax.cpp' object='libecf_la-FitnessMax.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-FitnessMax.lo `test -f 'FitnessMax.cpp' || echo '$(srcdir)/'`FitnessMax.cpp

libecf_la-FitnessMin.lo: FitnessMin.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-FitnessMin.lo -MD -MP -MF $(DEPDIR)/libecf_la-FitnessMin.Tpo -c -o libecf_la-FitnessMin.lo `test -f 'FitnessMin.cpp' || echo '$(srcdir)/'`FitnessMin.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-FitnessMin.Tpo $(DEPDIR)/libecf_la-FitnessMin.Plo
#	$(AM_V_CXX)source='FitnessMin.cpp' object='libecf_la-FitnessMin.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-FitnessMin.lo `test -f 'FitnessMin.cpp' || echo '$(srcdir)/'`FitnessMin.cpp

libecf_la-MOFitness.lo: MOFitness.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-MOFitness.lo -MD -MP -MF $(DEPDIR)/libecf_la-MOFitness.Tpo -c -o libecf_la-MOFitness.lo `test -f 'MOFitness.cpp' || echo '$(srcdir)/'`MOFitness.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-MOFitness.Tpo $(DEPDIR)/libecf_la-MOFitness.Plo
#	$(AM_V_CXX)source='MOFitness.cpp' object='libecf_la-MOFitness.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-MOFitness.lo `test -f 'MOFitness.cpp' || echo '$(srcdir)/'`MOFitness.cpp

libecf_la-Genotype.lo: Genotype.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-Genotype.lo -MD -MP -MF $(DEPDIR)/libecf_la-Genotype.Tpo -c -o libecf_la-Genotype.lo `test -f 'Genotype.cpp' || echo '$(srcdir)/'`Genotype.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-Genotype.Tpo $(DEPDIR)/libecf_la-Genotype.Plo
#	$(AM_V_CXX)source='Genotype.cpp' object='libecf_la-Genotype.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-Genotype.lo `test -f 'Genotype.cpp' || echo '$(srcdir)/'`Genotype.cpp

libecf_la-HallOfFame.lo: HallOfFame.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-HallOfFame.lo -MD -MP -MF $(DEPDIR)/libecf_la-HallOfFame.Tpo -c -o libecf_la-HallOfFame.lo `test -f 'HallOfFame.cpp' || echo '$(srcdir)/'`HallOfFame.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-HallOfFame.Tpo $(DEPDIR)/libecf_la-HallOfFame.Plo
#	$(AM_V_CXX)source='HallOfFame.cpp' object='libecf_la-HallOfFame.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-HallOfFame.lo `test -f 'HallOfFame.cpp' || echo '$(srcdir)/'`HallOfFame.cpp

libecf_la-Individual.lo: Individual.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-Individual.lo -MD -MP -MF $(DEPDIR)/libecf_la-Individual.Tpo -c -o libecf_la-Individual.lo `test -f 'Individual.cpp' || echo '$(srcdir)/'`Individual.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-Individual.Tpo $(DEPDIR)/libecf_la-Individual.Plo
#	$(AM_V_CXX)source='Individual.cpp' object='libecf_la-Individual.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-Individual.lo `test -f 'Individual.cpp' || echo '$(srcdir)/'`Individual.cpp

libecf_la-Logger.lo: Logger.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-Logger.lo -MD -MP -MF $(DEPDIR)/libecf_la-Logger.Tpo -c -o libecf_la-Logger.lo `test -f 'Logger.cpp' || echo '$(srcdir)/'`Logger.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-Logger.Tpo $(DEPDIR)/libecf_la-Logger.Plo
#	$(AM_V_CXX)source='Logger.cpp' object='libecf_la-Logger.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-Logger.lo `test -f 'Logger.cpp' || echo '$(srcdir)/'`Logger.cpp

libecf_la-Migration.lo: Migration.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-Migration.lo -MD -MP -MF $(DEPDIR)/libecf_la-Migration.Tpo -c -o libecf_la-Migration.lo `test -f 'Migration.cpp' || echo '$(srcdir)/'`Migration.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-Migration.Tpo $(DEPDIR)/libecf_la-Migration.Plo
#	$(AM_V_CXX)source='Migration.cpp' object='libecf_la-Migration.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-Migration.lo `test -f 'Migration.cpp' || echo '$(srcdir)/'`Migration.cpp

libecf_la-Mutation.lo: Mutation.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-Mutation.lo -MD -MP -MF $(DEPDIR)/libecf_la-Mutation.Tpo -c -o libecf_la-Mutation.lo `test -f 'Mutation.cpp' || echo '$(srcdir)/'`Mutation.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-Mutation.Tpo $(DEPDIR)/libecf_la-Mutation.Plo
#	$(AM_V_CXX)source='Mutation.cpp' object='libecf_la-Mutation.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-Mutation.lo `test -f 'Mutation.cpp' || echo '$(srcdir)/'`Mutation.cpp

libecf_la-Population.lo: Population.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-Population.lo -MD -MP -MF $(DEPDIR)/libecf_la-Population.Tpo -c -o libecf_la-Population.lo `test -f 'Population.cpp' || echo '$(srcdir)/'`Population.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-Population.Tpo $(DEPDIR)/libecf_la-Population.Plo
#	$(AM_V_CXX)source='Population.cpp' object='libecf_la-Population.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-Population.lo `test -f 'Population.cpp' || echo '$(srcdir)/'`Population.cpp

libecf_la-Registry.lo: Registry.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-Registry.lo -MD -MP -MF $(DEPDIR)/libecf_la-Registry.Tpo -c -o libecf_la-Registry.lo `test -f 'Registry.cpp' || echo '$(srcdir)/'`Registry.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-Registry.Tpo $(DEPDIR)/libecf_la-Registry.Plo
#	$(AM_V_CXX)source='Registry.cpp' object='libecf_la-Registry.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-Registry.lo `test -f 'Registry.cpp' || echo '$(srcdir)/'`Registry.cpp

libecf_la-SelBestOp.lo: SelBestOp.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-SelBestOp.lo -MD -MP -MF $(DEPDIR)/libecf_la-SelBestOp.Tpo -c -o libecf_la-SelBestOp.lo `test -f 'SelBestOp.cpp' || echo '$(srcdir)/'`SelBestOp.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-SelBestOp.Tpo $(DEPDIR)/libecf_la-SelBestOp.Plo
#	$(AM_V_CXX)source='SelBestOp.cpp' object='libecf_la-SelBestOp.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-SelBestOp.lo `test -f 'SelBestOp.cpp' || echo '$(srcdir)/'`SelBestOp.cpp

libecf_la-SelFitnessProportionalOp.lo: SelFitnessProportionalOp.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-SelFitnessProportionalOp.lo -MD -MP -MF $(DEPDIR)/libecf_la-SelFitnessProportionalOp.Tpo -c -o libecf_la-SelFitnessProportionalOp.lo `test -f 'SelFitnessProportionalOp.cpp' || echo '$(srcdir)/'`SelFitnessProportionalOp.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-SelFitnessProportionalOp.Tpo $(DEPDIR)/libecf_la-SelFitnessProportionalOp.Plo
#	$(AM_V_CXX)source='SelFitnessProportionalOp.cpp' object='libecf_la-SelFitnessProportionalOp.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-SelFitnessProportionalOp.lo `test -f 'SelFitnessProportionalOp.cpp' || echo '$(srcdir)/'`SelFitnessProportionalOp.cpp

libecf_la-SelRandomOp.lo: SelRandomOp.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-SelRandomOp.lo -MD -MP -MF $(DEPDIR)/libecf_la-SelRandomOp.Tpo -c -o libecf_la-SelRandomOp.lo `test -f 'SelRandomOp.cpp' || echo '$(srcdir)/'`SelRandomOp.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-SelRandomOp.Tpo $(DEPDIR)/libecf_la-SelRandomOp.Plo
#	$(AM_V_CXX)source='SelRandomOp.cpp' object='libecf_la-SelRandomOp.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-SelRandomOp.lo `test -f 'SelRandomOp.cpp' || echo '$(srcdir)/'`SelRandomOp.cpp

libecf_la-SelWorstOp.lo: SelWorstOp.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-SelWorstOp.lo -MD -MP -MF $(DEPDIR)/libecf_la-SelWorstOp.Tpo -c -o libecf_la-SelWorstOp.lo `test -f 'SelWorstOp.cpp' || echo '$(srcdir)/'`SelWorstOp.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-SelWorstOp.Tpo $(DEPDIR)/libecf_la-SelWorstOp.Plo
#	$(AM_V_CXX)source='SelWorstOp.cpp' object='libecf_la-SelWorstOp.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-SelWorstOp.lo `test -f 'SelWorstOp.cpp' || echo '$(srcdir)/'`SelWorstOp.cpp

libecf_la-SimpleRandomizer.lo: SimpleRandomizer.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-SimpleRandomizer.lo -MD -MP -MF $(DEPDIR)/libecf_la-SimpleRandomizer.Tpo -c -o libecf_la-SimpleRandomizer.lo `test -f 'SimpleRandomizer.cpp' || echo '$(srcdir)/'`SimpleRandomizer.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-SimpleRandomizer.Tpo $(DEPDIR)/libecf_la-SimpleRandomizer.Plo
#	$(AM_V_CXX)source='SimpleRandomizer.cpp' object='libecf_la-SimpleRandomizer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-SimpleRandomizer.lo `test -f 'SimpleRandomizer.cpp' || echo '$(srcdir)/'`SimpleRandomizer.cpp

libecf_la-StatCalc.lo: StatCalc.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-StatCalc.lo -MD -MP -MF $(DEPDIR)/libecf_la-StatCalc.Tpo -c -o libecf_la-StatCalc.lo `test -f 'StatCalc.cpp' || echo '$(srcdir)/'`StatCalc.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-StatCalc.Tpo $(DEPDIR)/libecf_la-StatCalc.Plo
#	$(AM_V_CXX)source='StatCalc.cpp' object='libecf_la-StatCalc.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-StatCalc.lo `test -f 'StatCalc.cpp' || echo '$(srcdir)/'`StatCalc.cpp

libecf_la-State.lo: State.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-State.lo -MD -MP -MF $(DEPDIR)/libecf_la-State.Tpo -c -o libecf_la-State.lo `test -f 'State.cpp' || echo '$(srcdir)/'`State.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-State.Tpo $(DEPDIR)/libecf_la-State.Plo
#	$(AM_V_CXX)source='State.cpp' object='libecf_la-State.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-State.lo `test -f 'State.cpp' || echo '$(srcdir)/'`State.cpp

libecf_la-TermFitnessValOp.lo: TermFitnessValOp.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-TermFitnessValOp.lo -MD -MP -MF $(DEPDIR)/libecf_la-TermFitnessValOp.Tpo -c -o libecf_la-TermFitnessValOp.lo `test -f 'TermFitnessValOp.cpp' || echo '$(srcdir)/'`TermFitnessValOp.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-TermFitnessValOp.Tpo $(DEPDIR)/libecf_la-TermFitnessValOp.Plo
#	$(AM_V_CXX)source='TermFitnessValOp.cpp' object='libecf_la-TermFitnessValOp.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-TermFitnessValOp.lo `test -f 'TermFitnessValOp.cpp' || echo '$(srcdir)/'`TermFitnessValOp.cpp

libecf_la-TermMaxGenOp.lo: TermMaxGenOp.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-TermMaxGenOp.lo -MD -MP -MF $(DEPDIR)/libecf_la-TermMaxGenOp.Tpo -c -o libecf_la-TermMaxGenOp.lo `test -f 'TermMaxGenOp.cpp' || echo '$(srcdir)/'`TermMaxGenOp.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-TermMaxGenOp.Tpo $(DEPDIR)/libecf_la-TermMaxGenOp.Plo
#	$(AM_V_CXX)source='TermMaxGenOp.cpp' object='libecf_la-TermMaxGenOp.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-TermMaxGenOp.lo `test -f 'TermMaxGenOp.cpp' || echo '$(srcdir)/'`TermMaxGenOp.cpp

libecf_la-TermMaxTimeOp.lo: TermMaxTimeOp.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-TermMaxTimeOp.lo -MD -MP -MF $(DEPDIR)/libecf_la-TermMaxTimeOp.Tpo -c -o libecf_la-TermMaxTimeOp.lo `test -f 'TermMaxTimeOp.cpp' || echo '$(srcdir)/'`TermMaxTimeOp.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-TermMaxTimeOp.Tpo $(DEPDIR)/libecf_la-TermMaxTimeOp.Plo
#	$(AM_V_CXX)source='TermMaxTimeOp.cpp' object='libecf_la-TermMaxTimeOp.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-TermMaxTimeOp.lo `test -f 'TermMaxTimeOp.cpp' || echo '$(srcdir)/'`TermMaxTimeOp.cpp

libecf_la-TermStagnationOp.lo: TermStagnationOp.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-TermStagnationOp.lo -MD -MP -MF $(DEPDIR)/libecf_la-TermStagnationOp.Tpo -c -o libecf_la-TermStagnationOp.lo `test -f 'TermStagnationOp.cpp' || echo '$(srcdir)/'`TermStagnationOp.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-TermStagnationOp.Tpo $(DEPDIR)/libecf_la-TermStagnationOp.Plo
#	$(AM_V_CXX)source='TermStagnationOp.cpp' object='libecf_la-TermStagnationOp.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-TermStagnationOp.lo `test -f 'TermStagnationOp.cpp' || echo '$(srcdir)/'`TermStagnationOp.cpp

libecf_la-TermMaxEvalOp.lo: TermMaxEvalOp.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-TermMaxEvalOp.lo -MD -MP -MF $(DEPDIR)/libecf_la-TermMaxEvalOp.Tpo -c -o libecf_la-TermMaxEvalOp.lo `test -f 'TermMaxEvalOp.cpp' || echo '$(srcdir)/'`TermMaxEvalOp.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-TermMaxEvalOp.Tpo $(DEPDIR)/libecf_la-TermMaxEvalOp.Plo
#	$(AM_V_CXX)source='TermMaxEvalOp.cpp' object='libecf_la-TermMaxEvalOp.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-TermMaxEvalOp.lo `test -f 'TermMaxEvalOp.cpp' || echo '$(srcdir)/'`TermMaxEvalOp.cpp

libecf_la-Binary.lo: binary/Binary.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-Binary.lo -MD -MP -MF $(DEPDIR)/libecf_la-Binary.Tpo -c -o libecf_la-Binary.lo `test -f 'binary/Binary.cpp' || echo '$(srcdir)/'`binary/Binary.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-Binary.Tpo $(DEPDIR)/libecf_la-Binary.Plo
#	$(AM_V_CXX)source='binary/Binary.cpp' object='libecf_la-Binary.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-Binary.lo `test -f 'binary/Binary.cpp' || echo '$(srcdir)/'`binary/Binary.cpp

libecf_la-BinaryCrsHalfUniform.lo: binary/BinaryCrsHalfUniform.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-BinaryCrsHalfUniform.lo -MD -MP -MF $(DEPDIR)/libecf_la-BinaryCrsHalfUniform.Tpo -c -o libecf_la-BinaryCrsHalfUniform.lo `test -f 'binary/BinaryCrsHalfUniform.cpp' || echo '$(srcdir)/'`binary/BinaryCrsHalfUniform.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-BinaryCrsHalfUniform.Tpo $(DEPDIR)/libecf_la-BinaryCrsHalfUniform.Plo
#	$(AM_V_CXX)source='binary/BinaryCrsHalfUniform.cpp' object='libecf_la-BinaryCrsHalfUniform.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-BinaryCrsHalfUniform.lo `test -f 'binary/BinaryCrsHalfUniform.cpp' || echo '$(srcdir)/'`binary/BinaryCrsHalfUniform.cpp

libecf_la-BinaryCrsMasked.lo: binary/BinaryCrsMasked.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-BinaryCrsMasked.lo -MD -MP -MF $(DEPDIR)/libecf_la-BinaryCrsMasked.Tpo -c -o libecf_la-BinaryCrsMasked.lo `test -f 'binary/BinaryCrsMasked.cpp' || echo '$(srcdir)/'`binary/BinaryCrsMasked.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-BinaryCrsMasked.Tpo $(DEPDIR)/libecf_la-BinaryCrsMasked.Plo
#	$(AM_V_CXX)source='binary/BinaryCrsMasked.cpp' object='libecf_la-BinaryCrsMasked.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-BinaryCrsMasked.lo `test -f 'binary/BinaryCrsMasked.cpp' || echo '$(srcdir)/'`binary/BinaryCrsMasked.cpp

libecf_la-BinaryCrsNonGeometric.lo: binary/BinaryCrsNonGeometric.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-BinaryCrsNonGeometric.lo -MD -MP -MF $(DEPDIR)/libecf_la-BinaryCrsNonGeometric.Tpo -c -o libecf_la-BinaryCrsNonGeometric.lo `test -f 'binary/BinaryCrsNonGeometric.cpp' || echo '$(srcdir)/'`binary/BinaryCrsNonGeometric.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-BinaryCrsNonGeometric.Tpo $(DEPDIR)/libecf_la-BinaryCrsNonGeometric.Plo
#	$(AM_V_CXX)source='binary/BinaryCrsNonGeometric.cpp' object='libecf_la-BinaryCrsNonGeometric.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-BinaryCrsNonGeometric.lo `test -f 'binary/BinaryCrsNonGeometric.cpp' || echo '$(srcdir)/'`binary/BinaryCrsNonGeometric.cpp

libecf_la-BinaryCrsOnePoint.lo: binary/BinaryCrsOnePoint.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-BinaryCrsOnePoint.lo -MD -MP -MF $(DEPDIR)/libecf_la-BinaryCrsOnePoint.Tpo -c -o libecf_la-BinaryCrsOnePoint.lo `test -f 'binary/BinaryCrsOnePoint.cpp' || echo '$(srcdir)/'`binary/BinaryCrsOnePoint.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-BinaryCrsOnePoint.Tpo $(DEPDIR)/libecf_la-BinaryCrsOnePoint.Plo
#	$(AM_V_CXX)source='binary/BinaryCrsOnePoint.cpp' object='libecf_la-BinaryCrsOnePoint.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-BinaryCrsOnePoint.lo `test -f 'binary/BinaryCrsOnePoint.cpp' || echo '$(srcdir)/'`binary/BinaryCrsOnePoint.cpp

libecf_la-BinaryCrsRandomRespectful.lo: binary/BinaryCrsRandomRespectful.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-BinaryCrsRandomRespectful.lo -MD -MP -MF $(DEPDIR)/libecf_la-BinaryCrsRandomRespectful.Tpo -c -o libecf_la-BinaryCrsRandomRespectful.lo `test -f 'binary/BinaryCrsRandomRespectful.cpp' || echo '$(srcdir)/'`binary/BinaryCrsRandomRespectful.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-BinaryCrsRandomRespectful.Tpo $(DEPDIR)/libecf_la-BinaryCrsRandomRespectful.Plo
#	$(AM_V_CXX)source='binary/BinaryCrsRandomRespectful.cpp' object='libecf_la-BinaryCrsRandomRespectful.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-BinaryCrsRandomRespectful.lo `test -f 'binary/BinaryCrsRandomRespectful.cpp' || echo '$(srcdir)/'`binary/BinaryCrsRandomRespectful.cpp

libecf_la-BinaryCrsReducedSurrogate.lo: binary/BinaryCrsReducedSurrogate.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-BinaryCrsReducedSurrogate.lo -MD -MP -MF $(DEPDIR)/libecf_la-BinaryCrsReducedSurrogate.Tpo -c -o libecf_la-BinaryCrsReducedSurrogate.lo `test -f 'binary/BinaryCrsReducedSurrogate.cpp' || echo '$(srcdir)/'`binary/BinaryCrsReducedSurrogate.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-BinaryCrsReducedSurrogate.Tpo $(DEPDIR)/libecf_la-BinaryCrsReducedSurrogate.Plo
#	$(AM_V_CXX)source='binary/BinaryCrsReducedSurrogate.cpp' object='libecf_la-BinaryCrsReducedSurrogate.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-BinaryCrsReducedSurrogate.lo `test -f 'binary/BinaryCrsReducedSurrogate.cpp' || echo '$(srcdir)/'`binary/BinaryCrsReducedSurrogate.cpp

libecf_la-BinaryCrsSegmented.lo: binary/BinaryCrsSegmented.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-BinaryCrsSegmented.lo -MD -MP -MF $(DEPDIR)/libecf_la-BinaryCrsSegmented.Tpo -c -o libecf_la-BinaryCrsSegmented.lo `test -f 'binary/BinaryCrsSegmented.cpp' || echo '$(srcdir)/'`binary/BinaryCrsSegmented.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-BinaryCrsSegmented.Tpo $(DEPDIR)/libecf_la-BinaryCrsSegmented.Plo
#	$(AM_V_CXX)source='binary/BinaryCrsSegmented.cpp' object='libecf_la-BinaryCrsSegmented.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-BinaryCrsSegmented.lo `test -f 'binary/BinaryCrsSegmented.cpp' || echo '$(srcdir)/'`binary/BinaryCrsSegmented.cpp

libecf_la-BinaryCrsShuffle.lo: binary/BinaryCrsShuffle.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-BinaryCrsShuffle.lo -MD -MP -MF $(DEPDIR)/libecf_la-BinaryCrsShuffle.Tpo -c -o libecf_la-BinaryCrsShuffle.lo `test -f 'binary/BinaryCrsShuffle.cpp' || echo '$(srcdir)/'`binary/BinaryCrsShuffle.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-BinaryCrsShuffle.Tpo $(DEPDIR)/libecf_la-BinaryCrsShuffle.Plo
#	$(AM_V_CXX)source='binary/BinaryCrsShuffle.cpp' object='libecf_la-BinaryCrsShuffle.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-BinaryCrsShuffle.lo `test -f 'binary/BinaryCrsShuffle.cpp' || echo '$(srcdir)/'`binary/BinaryCrsShuffle.cpp

libecf_la-BinaryCrsTwoPoint.lo: binary/BinaryCrsTwoPoint.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-BinaryCrsTwoPoint.lo -MD -MP -MF $(DEPDIR)/libecf_la-BinaryCrsTwoPoint.Tpo -c -o libecf_la-BinaryCrsTwoPoint.lo `test -f 'binary/BinaryCrsTwoPoint.cpp' || echo '$(srcdir)/'`binary/BinaryCrsTwoPoint.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-BinaryCrsTwoPoint.Tpo $(DEPDIR)/libecf_la-BinaryCrsTwoPoint.Plo
#	$(AM_V_CXX)source='binary/BinaryCrsTwoPoint.cpp' object='libecf_la-BinaryCrsTwoPoint.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-BinaryCrsTwoPoint.lo `test -f 'binary/BinaryCrsTwoPoint.cpp' || echo '$(srcdir)/'`binary/BinaryCrsTwoPoint.cpp

libecf_la-BinaryCrsUniform.lo: binary/BinaryCrsUniform.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-BinaryCrsUniform.lo -MD -MP -MF $(DEPDIR)/libecf_la-BinaryCrsUniform.Tpo -c -o libecf_la-BinaryCrsUniform.lo `test -f 'binary/BinaryCrsUniform.cpp' || echo '$(srcdir)/'`binary/BinaryCrsUniform.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-BinaryCrsUniform.Tpo $(DEPDIR)/libecf_la-BinaryCrsUniform.Plo
#	$(AM_V_CXX)source='binary/BinaryCrsUniform.cpp' object='libecf_la-BinaryCrsUniform.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-BinaryCrsUniform.lo `test -f 'binary/BinaryCrsUniform.cpp' || echo '$(srcdir)/'`binary/BinaryCrsUniform.cpp

libecf_la-BinaryMutMix.lo: binary/BinaryMutMix.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-BinaryMutMix.lo -MD -MP -MF $(DEPDIR)/libecf_la-BinaryMutMix.Tpo -c -o libecf_la-BinaryMutMix.lo `test -f 'binary/BinaryMutMix.cpp' || echo '$(srcdir)/'`binary/BinaryMutMix.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-BinaryMutMix.Tpo $(DEPDIR)/libecf_la-BinaryMutMix.Plo
#	$(AM_V_CXX)source='binary/BinaryMutMix.cpp' object='libecf_la-BinaryMutMix.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-BinaryMutMix.lo `test -f 'binary/BinaryMutMix.cpp' || echo '$(srcdir)/'`binary/BinaryMutMix.cpp

libecf_la-BinaryMutSimple.lo: binary/BinaryMutSimple.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-BinaryMutSimple.lo -MD -MP -MF $(DEPDIR)/libecf_la-BinaryMutSimple.Tpo -c -o libecf_la-BinaryMutSimple.lo `test -f 'binary/BinaryMutSimple.cpp' || echo '$(srcdir)/'`binary/BinaryMutSimple.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-BinaryMutSimple.Tpo $(DEPDIR)/libecf_la-BinaryMutSimple.Plo
#	$(AM_V_CXX)source='binary/BinaryMutSimple.cpp' object='libecf_la-BinaryMutSimple.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-BinaryMutSimple.lo `test -f 'binary/BinaryMutSimple.cpp' || echo '$(srcdir)/'`binary/BinaryMutSimple.cpp

libecf_la-FloatingPoint.lo: floatingpoint/FloatingPoint.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-FloatingPoint.lo -MD -MP -MF $(DEPDIR)/libecf_la-FloatingPoint.Tpo -c -o libecf_la-FloatingPoint.lo `test -f 'floatingpoint/FloatingPoint.cpp' || echo '$(srcdir)/'`floatingpoint/FloatingPoint.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-FloatingPoint.Tpo $(DEPDIR)/libecf_la-FloatingPoint.Plo
#	$(AM_V_CXX)source='floatingpoint/FloatingPoint.cpp' object='libecf_la-FloatingPoint.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-FloatingPoint.lo `test -f 'floatingpoint/FloatingPoint.cpp' || echo '$(srcdir)/'`floatingpoint/FloatingPoint.cpp

libecf_la-FloatingPointCrsArithmetic.lo: floatingpoint/FloatingPointCrsArithmetic.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-FloatingPointCrsArithmetic.lo -MD -MP -MF $(DEPDIR)/libecf_la-FloatingPointCrsArithmetic.Tpo -c -o libecf_la-FloatingPointCrsArithmetic.lo `test -f 'floatingpoint/FloatingPointCrsArithmetic.cpp' || echo '$(srcdir)/'`floatingpoint/FloatingPointCrsArithmetic.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-FloatingPointCrsArithmetic.Tpo $(DEPDIR)/libecf_la-FloatingPointCrsArithmetic.Plo
#	$(AM_V_CXX)source='floatingpoint/FloatingPointCrsArithmetic.cpp' object='libecf_la-FloatingPointCrsArithmetic.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-FloatingPointCrsArithmetic.lo `test -f 'floatingpoint/FloatingPointCrsArithmetic.cpp' || echo '$(srcdir)/'`floatingpoint/FloatingPointCrsArithmetic.cpp

libecf_la-FloatingPointCrsArithmeticSimple.lo: floatingpoint/FloatingPointCrsArithmeticSimple.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-FloatingPointCrsArithmeticSimple.lo -MD -MP -MF $(DEPDIR)/libecf_la-FloatingPointCrsArithmeticSimple.Tpo -c -o libecf_la-FloatingPointCrsArithmeticSimple.lo `test -f 'floatingpoint/FloatingPointCrsArithmeticSimple.cpp' || echo '$(srcdir)/'`floatingpoint/FloatingPointCrsArithmeticSimple.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-FloatingPointCrsArithmeticSimple.Tpo $(DEPDIR)/libecf_la-FloatingPointCrsArithmeticSimple.Plo
#	$(AM_V_CXX)source='floatingpoint/FloatingPointCrsArithmeticSimple.cpp' object='libecf_la-FloatingPointCrsArithmeticSimple.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-FloatingPointCrsArithmeticSimple.lo `test -f 'floatingpoint/FloatingPointCrsArithmeticSimple.cpp' || echo '$(srcdir)/'`floatingpoint/FloatingPointCrsArithmeticSimple.cpp

libecf_la-FloatingPointCrsArithmeticSingle.lo: floatingpoint/FloatingPointCrsArithmeticSingle.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-FloatingPointCrsArithmeticSingle.lo -MD -MP -MF $(DEPDIR)/libecf_la-FloatingPointCrsArithmeticSingle.Tpo -c -o libecf_la-FloatingPointCrsArithmeticSingle.lo `test -f 'floatingpoint/FloatingPointCrsArithmeticSingle.cpp' || echo '$(srcdir)/'`floatingpoint/FloatingPointCrsArithmeticSingle.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-FloatingPointCrsArithmeticSingle.Tpo $(DEPDIR)/libecf_la-FloatingPointCrsArithmeticSingle.Plo
#	$(AM_V_CXX)source='floatingpoint/FloatingPointCrsArithmeticSingle.cpp' object='libecf_la-FloatingPointCrsArithmeticSingle.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-FloatingPointCrsArithmeticSingle.lo `test -f 'floatingpoint/FloatingPointCrsArithmeticSingle.cpp' || echo '$(srcdir)/'`floatingpoint/FloatingPointCrsArithmeticSingle.cpp

libecf_la-FloatingPointCrsAverage.lo: floatingpoint/FloatingPointCrsAverage.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-FloatingPointCrsAverage.lo -MD -MP -MF $(DEPDIR)/libecf_la-FloatingPointCrsAverage.Tpo -c -o libecf_la-FloatingPointCrsAverage.lo `test -f 'floatingpoint/FloatingPointCrsAverage.cpp' || echo '$(srcdir)/'`floatingpoint/FloatingPointCrsAverage.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-FloatingPointCrsAverage.Tpo $(DEPDIR)/libecf_la-FloatingPointCrsAverage.Plo
#	$(AM_V_CXX)source='floatingpoint/FloatingPointCrsAverage.cpp' object='libecf_la-FloatingPointCrsAverage.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-FloatingPointCrsAverage.lo `test -f 'floatingpoint/FloatingPointCrsAverage.cpp' || echo '$(srcdir)/'`floatingpoint/FloatingPointCrsAverage.cpp

libecf_la-FloatingPointCrsBga.lo: floatingpoint/FloatingPointCrsBga.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-FloatingPointCrsBga.lo -MD -MP -MF $(DEPDIR)/libecf_la-FloatingPointCrsBga.Tpo -c -o libecf_la-FloatingPointCrsBga.lo `test -f 'floatingpoint/FloatingPointCrsBga.cpp' || echo '$(srcdir)/'`floatingpoint/FloatingPointCrsBga.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-FloatingPointCrsBga.Tpo $(DEPDIR)/libecf_la-FloatingPointCrsBga.Plo
#	$(AM_V_CXX)source='floatingpoint/FloatingPointCrsBga.cpp' object='libecf_la-FloatingPointCrsBga.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-FloatingPointCrsBga.lo `test -f 'floatingpoint/FloatingPointCrsBga.cpp' || echo '$(srcdir)/'`floatingpoint/FloatingPointCrsBga.cpp

libecf_la-FloatingPointCrsBlx.lo: floatingpoint/FloatingPointCrsBlx.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-FloatingPointCrsBlx.lo -MD -MP -MF $(DEPDIR)/libecf_la-FloatingPointCrsBlx.Tpo -c -o libecf_la-FloatingPointCrsBlx.lo `test -f 'floatingpoint/FloatingPointCrsBlx.cpp' || echo '$(srcdir)/'`floatingpoint/FloatingPointCrsBlx.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-FloatingPointCrsBlx.Tpo $(DEPDIR)/libecf_la-FloatingPointCrsBlx.Plo
#	$(AM_V_CXX)source='floatingpoint/FloatingPointCrsBlx.cpp' object='libecf_la-FloatingPointCrsBlx.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-FloatingPointCrsBlx.lo `test -f 'floatingpoint/FloatingPointCrsBlx.cpp' || echo '$(srcdir)/'`floatingpoint/FloatingPointCrsBlx.cpp

libecf_la-FloatingPointCrsBlxAlpha.lo: floatingpoint/FloatingPointCrsBlxAlpha.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-FloatingPointCrsBlxAlpha.lo -MD -MP -MF $(DEPDIR)/libecf_la-FloatingPointCrsBlxAlpha.Tpo -c -o libecf_la-FloatingPointCrsBlxAlpha.lo `test -f 'floatingpoint/FloatingPointCrsBlxAlpha.cpp' || echo '$(srcdir)/'`floatingpoint/FloatingPointCrsBlxAlpha.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-FloatingPointCrsBlxAlpha.Tpo $(DEPDIR)/libecf_la-FloatingPointCrsBlxAlpha.Plo
#	$(AM_V_CXX)source='floatingpoint/FloatingPointCrsBlxAlpha.cpp' object='libecf_la-FloatingPointCrsBlxAlpha.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-FloatingPointCrsBlxAlpha.lo `test -f 'floatingpoint/FloatingPointCrsBlxAlpha.cpp' || echo '$(srcdir)/'`floatingpoint/FloatingPointCrsBlxAlpha.cpp

libecf_la-FloatingPointCrsBlxAlphaBeta.lo: floatingpoint/FloatingPointCrsBlxAlphaBeta.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-FloatingPointCrsBlxAlphaBeta.lo -MD -MP -MF $(DEPDIR)/libecf_la-FloatingPointCrsBlxAlphaBeta.Tpo -c -o libecf_la-FloatingPointCrsBlxAlphaBeta.lo `test -f 'floatingpoint/FloatingPointCrsBlxAlphaBeta.cpp' || echo '$(srcdir)/'`floatingpoint/FloatingPointCrsBlxAlphaBeta.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-FloatingPointCrsBlxAlphaBeta.Tpo $(DEPDIR)/libecf_la-FloatingPointCrsBlxAlphaBeta.Plo
#	$(AM_V_CXX)source='floatingpoint/FloatingPointCrsBlxAlphaBeta.cpp' object='libecf_la-FloatingPointCrsBlxAlphaBeta.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-FloatingPointCrsBlxAlphaBeta.lo `test -f 'floatingpoint/FloatingPointCrsBlxAlphaBeta.cpp' || echo '$(srcdir)/'`floatingpoint/FloatingPointCrsBlxAlphaBeta.cpp

libecf_la-FloatingPointCrsDiscrete.lo: floatingpoint/FloatingPointCrsDiscrete.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-FloatingPointCrsDiscrete.lo -MD -MP -MF $(DEPDIR)/libecf_la-FloatingPointCrsDiscrete.Tpo -c -o libecf_la-FloatingPointCrsDiscrete.lo `test -f 'floatingpoint/FloatingPointCrsDiscrete.cpp' || echo '$(srcdir)/'`floatingpoint/FloatingPointCrsDiscrete.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-FloatingPointCrsDiscrete.Tpo $(DEPDIR)/libecf_la-FloatingPointCrsDiscrete.Plo
#	$(AM_V_CXX)source='floatingpoint/FloatingPointCrsDiscrete.cpp' object='libecf_la-FloatingPointCrsDiscrete.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-FloatingPointCrsDiscrete.lo `test -f 'floatingpoint/FloatingPointCrsDiscrete.cpp' || echo '$(srcdir)/'`floatingpoint/FloatingPointCrsDiscrete.cpp

libecf_la-FloatingPointCrsFlat.lo: floatingpoint/FloatingPointCrsFlat.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-FloatingPointCrsFlat.lo -MD -MP -MF $(DEPDIR)/libecf_la-FloatingPointCrsFlat.Tpo -c -o libecf_la-FloatingPointCrsFlat.lo `test -f 'floatingpoint/FloatingPointCrsFlat.cpp' || echo '$(srcdir)/'`floatingpoint/FloatingPointCrsFlat.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-FloatingPointCrsFlat.Tpo $(DEPDIR)/libecf_la-FloatingPointCrsFlat.Plo
#	$(AM_V_CXX)source='floatingpoint/FloatingPointCrsFlat.cpp' object='libecf_la-FloatingPointCrsFlat.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-FloatingPointCrsFlat.lo `test -f 'floatingpoint/FloatingPointCrsFlat.cpp' || echo '$(srcdir)/'`floatingpoint/FloatingPointCrsFlat.cpp

libecf_la-FloatingPointCrsHeuristic.lo: floatingpoint/FloatingPointCrsHeuristic.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-FloatingPointCrsHeuristic.lo -MD -MP -MF $(DEPDIR)/libecf_la-FloatingPointCrsHeuristic.Tpo -c -o libecf_la-FloatingPointCrsHeuristic.lo `test -f 'floatingpoint/FloatingPointCrsHeuristic.cpp' || echo '$(srcdir)/'`floatingpoint/FloatingPointCrsHeuristic.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-FloatingPointCrsHeuristic.Tpo $(DEPDIR)/libecf_la-FloatingPointCrsHeuristic.Plo
#	$(AM_V_CXX)source='floatingpoint/FloatingPointCrsHeuristic.cpp' object='libecf_la-FloatingPointCrsHeuristic.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-FloatingPointCrsHeuristic.lo `test -f 'floatingpoint/FloatingPointCrsHeuristic.cpp' || echo '$(srcdir)/'`floatingpoint/FloatingPointCrsHeuristic.cpp

libecf_la-FloatingPointCrsLocal.lo: floatingpoint/FloatingPointCrsLocal.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-FloatingPointCrsLocal.lo -MD -MP -MF $(DEPDIR)/libecf_la-FloatingPointCrsLocal.Tpo -c -o libecf_la-FloatingPointCrsLocal.lo `test -f 'floatingpoint/FloatingPointCrsLocal.cpp' || echo '$(srcdir)/'`floatingpoint/FloatingPointCrsLocal.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-FloatingPointCrsLocal.Tpo $(DEPDIR)/libecf_la-FloatingPointCrsLocal.Plo
#	$(AM_V_CXX)source='floatingpoint/FloatingPointCrsLocal.cpp' object='libecf_la-FloatingPointCrsLocal.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-FloatingPointCrsLocal.lo `test -f 'floatingpoint/FloatingPointCrsLocal.cpp' || echo '$(srcdir)/'`floatingpoint/FloatingPointCrsLocal.cpp

libecf_la-FloatingPointCrsOnePoint.lo: floatingpoint/FloatingPointCrsOnePoint.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-FloatingPointCrsOnePoint.lo -MD -MP -MF $(DEPDIR)/libecf_la-FloatingPointCrsOnePoint.Tpo -c -o libecf_la-FloatingPointCrsOnePoint.lo `test -f 'floatingpoint/FloatingPointCrsOnePoint.cpp' || echo '$(srcdir)/'`floatingpoint/FloatingPointCrsOnePoint.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-FloatingPointCrsOnePoint.Tpo $(DEPDIR)/libecf_la-FloatingPointCrsOnePoint.Plo
#	$(AM_V_CXX)source='floatingpoint/FloatingPointCrsOnePoint.cpp' object='libecf_la-FloatingPointCrsOnePoint.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-FloatingPointCrsOnePoint.lo `test -f 'floatingpoint/FloatingPointCrsOnePoint.cpp' || echo '$(srcdir)/'`floatingpoint/FloatingPointCrsOnePoint.cpp

libecf_la-FloatingPointCrsRandom.lo: floatingpoint/FloatingPointCrsRandom.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-FloatingPointCrsRandom.lo -MD -MP -MF $(DEPDIR)/libecf_la-FloatingPointCrsRandom.Tpo -c -o libecf_la-FloatingPointCrsRandom.lo `test -f 'floatingpoint/FloatingPointCrsRandom.cpp' || echo '$(srcdir)/'`floatingpoint/FloatingPointCrsRandom.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-FloatingPointCrsRandom.Tpo $(DEPDIR)/libecf_la-FloatingPointCrsRandom.Plo
#	$(AM_V_CXX)source='floatingpoint/FloatingPointCrsRandom.cpp' object='libecf_la-FloatingPointCrsRandom.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-FloatingPointCrsRandom.lo `test -f 'floatingpoint/FloatingPointCrsRandom.cpp' || echo '$(srcdir)/'`floatingpoint/FloatingPointCrsRandom.cpp

libecf_la-FloatingPointCrsSbx.lo: floatingpoint/FloatingPointCrsSbx.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-FloatingPointCrsSbx.lo -MD -MP -MF $(DEPDIR)/libecf_la-FloatingPointCrsSbx.Tpo -c -o libecf_la-FloatingPointCrsSbx.lo `test -f 'floatingpoint/FloatingPointCrsSbx.cpp' || echo '$(srcdir)/'`floatingpoint/FloatingPointCrsSbx.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-FloatingPointCrsSbx.Tpo $(DEPDIR)/libecf_la-FloatingPointCrsSbx.Plo
#	$(AM_V_CXX)source='floatingpoint/FloatingPointCrsSbx.cpp' object='libecf_la-FloatingPointCrsSbx.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-FloatingPointCrsSbx.lo `test -f 'floatingpoint/FloatingPointCrsSbx.cpp' || echo '$(srcdir)/'`floatingpoint/FloatingPointCrsSbx.cpp

libecf_la-FloatingPointMutSimple.lo: floatingpoint/FloatingPointMutSimple.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-FloatingPointMutSimple.lo -MD -MP -MF $(DEPDIR)/libecf_la-FloatingPointMutSimple.Tpo -c -o libecf_la-FloatingPointMutSimple.lo `test -f 'floatingpoint/FloatingPointMutSimple.cpp' || echo '$(srcdir)/'`floatingpoint/FloatingPointMutSimple.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-FloatingPointMutSimple.Tpo $(DEPDIR)/libecf_la-FloatingPointMutSimple.Plo
#	$(AM_V_CXX)source='floatingpoint/FloatingPointMutSimple.cpp' object='libecf_la-FloatingPointMutSimple.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-FloatingPointMutSimple.lo `test -f 'floatingpoint/FloatingPointMutSimple.cpp' || echo '$(srcdir)/'`floatingpoint/FloatingPointMutSimple.cpp

libecf_la-BitStringCrsOnePoint.lo: bitstring/BitStringCrsOnePoint.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-BitStringCrsOnePoint.lo -MD -MP -MF $(DEPDIR)/libecf_la-BitStringCrsOnePoint.Tpo -c -o libecf_la-BitStringCrsOnePoint.lo `test -f 'bitstring/BitStringCrsOnePoint.cpp' || echo '$(srcdir)/'`bitstring/BitStringCrsOnePoint.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-BitStringCrsOnePoint.Tpo $(DEPDIR)/libecf_la-BitStringCrsOnePoint.Plo
#	$(AM_V_CXX)source='bitstring/BitStringCrsOnePoint.cpp' object='libecf_la-BitStringCrsOnePoint.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-BitStringCrsOnePoint.lo `test -f 'bitstring/BitStringCrsOnePoint.cpp' || echo '$(srcdir)/'`bitstring/BitStringCrsOnePoint.cpp

libecf_la-BitStringMutSimple.lo: bitstring/BitStringMutSimple.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-BitStringMutSimple.lo -MD -MP -MF $(DEPDIR)/libecf_la-BitStringMutSimple.Tpo -c -o libecf_la-BitStringMutSimple.lo `test -f 'bitstring/BitStringMutSimple.cpp' || echo '$(srcdir)/'`bitstring/BitStringMutSimple.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-BitStringMutSimple.Tpo $(DEPDIR)/libecf_la-BitStringMutSimple.Plo
#	$(AM_V_CXX)source='bitstring/BitStringMutSimple.cpp' object='libecf_la-BitStringMutSimple.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-BitStringMutSimple.lo `test -f 'bitstring/BitStringMutSimple.cpp' || echo '$(srcdir)/'`bitstring/BitStringMutSimple.cpp

libecf_la-BitStringCrsUniform.lo: bitstring/BitStringCrsUniform.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-BitStringCrsUniform.lo -MD -MP -MF $(DEPDIR)/libecf_la-BitStringCrsUniform.Tpo -c -o libecf_la-BitStringCrsUniform.lo `test -f 'bitstring/BitStringCrsUniform.cpp' || echo '$(srcdir)/'`bitstring/BitStringCrsUniform.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-BitStringCrsUniform.Tpo $(DEPDIR)/libecf_la-BitStringCrsUniform.Plo
#	$(AM_V_CXX)source='bitstring/BitStringCrsUniform.cpp' object='libecf_la-BitStringCrsUniform.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-BitStringCrsUniform.lo `test -f 'bitstring/BitStringCrsUniform.cpp' || echo '$(srcdir)/'`bitstring/BitStringCrsUniform.cpp

libecf_la-BitStringMutMix.lo: bitstring/BitStringMutMix.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-BitStringMutMix.lo -MD -MP -MF $(DEPDIR)/libecf_la-BitStringMutMix.Tpo -c -o libecf_la-BitStringMutMix.lo `test -f 'bitstring/BitStringMutMix.cpp' || echo '$(srcdir)/'`bitstring/BitStringMutMix.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-BitStringMutMix.Tpo $(DEPDIR)/libecf_la-BitStringMutMix.Plo
#	$(AM_V_CXX)source='bitstring/BitStringMutMix.cpp' object='libecf_la-BitStringMutMix.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-BitStringMutMix.lo `test -f 'bitstring/BitStringMutMix.cpp' || echo '$(srcdir)/'`bitstring/BitStringMutMix.cpp

libecf_la-Cos.lo: tree/Cos.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-Cos.lo -MD -MP -MF $(DEPDIR)/libecf_la-Cos.Tpo -c -o libecf_la-Cos.lo `test -f 'tree/Cos.cpp' || echo '$(srcdir)/'`tree/Cos.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-Cos.Tpo $(DEPDIR)/libecf_la-Cos.Plo
#	$(AM_V_CXX)source='tree/Cos.cpp' object='libecf_la-Cos.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-Cos.lo `test -f 'tree/Cos.cpp' || echo '$(srcdir)/'`tree/Cos.cpp

libecf_la-Node.lo: tree/Node.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-Node.lo -MD -MP -MF $(DEPDIR)/libecf_la-Node.Tpo -c -o libecf_la-Node.lo `test -f 'tree/Node.cpp' || echo '$(srcdir)/'`tree/Node.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-Node.Tpo $(DEPDIR)/libecf_la-Node.Plo
#	$(AM_V_CXX)source='tree/Node.cpp' object='libecf_la-Node.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-Node.lo `test -f 'tree/Node.cpp' || echo '$(srcdir)/'`tree/Node.cpp

libecf_la-Primitive.lo: tree/Primitive.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-Primitive.lo -MD -MP -MF $(DEPDIR)/libecf_la-Primitive.Tpo -c -o libecf_la-Primitive.lo `test -f 'tree/Primitive.cpp' || echo '$(srcdir)/'`tree/Primitive.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-Primitive.Tpo $(DEPDIR)/libecf_la-Primitive.Plo
#	$(AM_V_CXX)source='tree/Primitive.cpp' object='libecf_la-Primitive.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-Primitive.lo `test -f 'tree/Primitive.cpp' || echo '$(srcdir)/'`tree/Primitive.cpp

libecf_la-PrimitiveSet.lo: tree/PrimitiveSet.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-PrimitiveSet.lo -MD -MP -MF $(DEPDIR)/libecf_la-PrimitiveSet.Tpo -c -o libecf_la-PrimitiveSet.lo `test -f 'tree/PrimitiveSet.cpp' || echo '$(srcdir)/'`tree/PrimitiveSet.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-PrimitiveSet.Tpo $(DEPDIR)/libecf_la-PrimitiveSet.Plo
#	$(AM_V_CXX)source='tree/PrimitiveSet.cpp' object='libecf_la-PrimitiveSet.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-PrimitiveSet.lo `test -f 'tree/PrimitiveSet.cpp' || echo '$(srcdir)/'`tree/PrimitiveSet.cpp

libecf_la-Sin.lo: tree/Sin.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-Sin.lo -MD -MP -MF $(DEPDIR)/libecf_la-Sin.Tpo -c -o libecf_la-Sin.lo `test -f 'tree/Sin.cpp' || echo '$(srcdir)/'`tree/Sin.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-Sin.Tpo $(DEPDIR)/libecf_la-Sin.Plo
#	$(AM_V_CXX)source='tree/Sin.cpp' object='libecf_la-Sin.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-Sin.lo `test -f 'tree/Sin.cpp' || echo '$(srcdir)/'`tree/Sin.cpp

libecf_la-Tree.lo: tree/Tree.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-Tree.lo -MD -MP -MF $(DEPDIR)/libecf_la-Tree.Tpo -c -o libecf_la-Tree.lo `test -f 'tree/Tree.cpp' || echo '$(srcdir)/'`tree/Tree.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-Tree.Tpo $(DEPDIR)/libecf_la-Tree.Plo
#	$(AM_V_CXX)source='tree/Tree.cpp' object='libecf_la-Tree.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-Tree.lo `test -f 'tree/Tree.cpp' || echo '$(srcdir)/'`tree/Tree.cpp

libecf_la-TreeCrxSimple.lo: tree/TreeCrxSimple.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-TreeCrxSimple.lo -MD -MP -MF $(DEPDIR)/libecf_la-TreeCrxSimple.Tpo -c -o libecf_la-TreeCrxSimple.lo `test -f 'tree/TreeCrxSimple.cpp' || echo '$(srcdir)/'`tree/TreeCrxSimple.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-TreeCrxSimple.Tpo $(DEPDIR)/libecf_la-TreeCrxSimple.Plo
#	$(AM_V_CXX)source='tree/TreeCrxSimple.cpp' object='libecf_la-TreeCrxSimple.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-TreeCrxSimple.lo `test -f 'tree/TreeCrxSimple.cpp' || echo '$(srcdir)/'`tree/TreeCrxSimple.cpp

libecf_la-TreeCrxContextPreserved.lo: tree/TreeCrxContextPreserved.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-TreeCrxContextPreserved.lo -MD -MP -MF $(DEPDIR)/libecf_la-TreeCrxContextPreserved.Tpo -c -o libecf_la-TreeCrxContextPreserved.lo `test -f 'tree/TreeCrxContextPreserved.cpp' || echo '$(srcdir)/'`tree/TreeCrxContextPreserved.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-TreeCrxContextPreserved.Tpo $(DEPDIR)/libecf_la-TreeCrxContextPreserved.Plo
#	$(AM_V_CXX)source='tree/TreeCrxContextPreserved.cpp' object='libecf_la-TreeCrxContextPreserved.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-TreeCrxContextPreserved.lo `test -f 'tree/TreeCrxContextPreserved.cpp' || echo '$(srcdir)/'`tree/TreeCrxContextPreserved.cpp

libecf_la-TreeCrxOnePoint.lo: tree/TreeCrxOnePoint.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-TreeCrxOnePoint.lo -MD -MP -MF $(DEPDIR)/libecf_la-TreeCrxOnePoint.Tpo -c -o libecf_la-TreeCrxOnePoint.lo `test -f 'tree/TreeCrxOnePoint.cpp' || echo '$(srcdir)/'`tree/TreeCrxOnePoint.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-TreeCrxOnePoint.Tpo $(DEPDIR)/libecf_la-TreeCrxOnePoint.Plo
#	$(AM_V_CXX)source='tree/TreeCrxOnePoint.cpp' object='libecf_la-TreeCrxOnePoint.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-TreeCrxOnePoint.lo `test -f 'tree/TreeCrxOnePoint.cpp' || echo '$(srcdir)/'`tree/TreeCrxOnePoint.cpp

libecf_la-TreeCrxSizeFair.lo: tree/TreeCrxSizeFair.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-TreeCrxSizeFair.lo -MD -MP -MF $(DEPDIR)/libecf_la-TreeCrxSizeFair.Tpo -c -o libecf_la-TreeCrxSizeFair.lo `test -f 'tree/TreeCrxSizeFair.cpp' || echo '$(srcdir)/'`tree/TreeCrxSizeFair.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-TreeCrxSizeFair.Tpo $(DEPDIR)/libecf_la-TreeCrxSizeFair.Plo
#	$(AM_V_CXX)source='tree/TreeCrxSizeFair.cpp' object='libecf_la-TreeCrxSizeFair.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-TreeCrxSizeFair.lo `test -f 'tree/TreeCrxSizeFair.cpp' || echo '$(srcdir)/'`tree/TreeCrxSizeFair.cpp

libecf_la-TreeCrxUniform.lo: tree/TreeCrxUniform.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-TreeCrxUniform.lo -MD -MP -MF $(DEPDIR)/libecf_la-TreeCrxUniform.Tpo -c -o libecf_la-TreeCrxUniform.lo `test -f 'tree/TreeCrxUniform.cpp' || echo '$(srcdir)/'`tree/TreeCrxUniform.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-TreeCrxUniform.Tpo $(DEPDIR)/libecf_la-TreeCrxUniform.Plo
#	$(AM_V_CXX)source='tree/TreeCrxUniform.cpp' object='libecf_la-TreeCrxUniform.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-TreeCrxUniform.lo `test -f 'tree/TreeCrxUniform.cpp' || echo '$(srcdir)/'`tree/TreeCrxUniform.cpp

libecf_la-TreeMutPermutation.lo: tree/TreeMutPermutation.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-TreeMutPermutation.lo -MD -MP -MF $(DEPDIR)/libecf_la-TreeMutPermutation.Tpo -c -o libecf_la-TreeMutPermutation.lo `test -f 'tree/TreeMutPermutation.cpp' || echo '$(srcdir)/'`tree/TreeMutPermutation.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-TreeMutPermutation.Tpo $(DEPDIR)/libecf_la-TreeMutPermutation.Plo
#	$(AM_V_CXX)source='tree/TreeMutPermutation.cpp' object='libecf_la-TreeMutPermutation.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-TreeMutPermutation.lo `test -f 'tree/TreeMutPermutation.cpp' || echo '$(srcdir)/'`tree/TreeMutPermutation.cpp

libecf_la-TreeMutGauss.lo: tree/TreeMutGauss.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-TreeMutGauss.lo -MD -MP -MF $(DEPDIR)/libecf_la-TreeMutGauss.Tpo -c -o libecf_la-TreeMutGauss.lo `test -f 'tree/TreeMutGauss.cpp' || echo '$(srcdir)/'`tree/TreeMutGauss.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-TreeMutGauss.Tpo $(DEPDIR)/libecf_la-TreeMutGauss.Plo
#	$(AM_V_CXX)source='tree/TreeMutGauss.cpp' object='libecf_la-TreeMutGauss.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-TreeMutGauss.lo `test -f 'tree/TreeMutGauss.cpp' || echo '$(srcdir)/'`tree/TreeMutGauss.cpp

libecf_la-TreeMutHoist.lo: tree/TreeMutHoist.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-TreeMutHoist.lo -MD -MP -MF $(DEPDIR)/libecf_la-TreeMutHoist.Tpo -c -o libecf_la-TreeMutHoist.lo `test -f 'tree/TreeMutHoist.cpp' || echo '$(srcdir)/'`tree/TreeMutHoist.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-TreeMutHoist.Tpo $(DEPDIR)/libecf_la-TreeMutHoist.Plo
#	$(AM_V_CXX)source='tree/TreeMutHoist.cpp' object='libecf_la-TreeMutHoist.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-TreeMutHoist.lo `test -f 'tree/TreeMutHoist.cpp' || echo '$(srcdir)/'`tree/TreeMutHoist.cpp

libecf_la-TreeMutNodeComplement.lo: tree/TreeMutNodeComplement.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-TreeMutNodeComplement.lo -MD -MP -MF $(DEPDIR)/libecf_la-TreeMutNodeComplement.Tpo -c -o libecf_la-TreeMutNodeComplement.lo `test -f 'tree/TreeMutNodeComplement.cpp' || echo '$(srcdir)/'`tree/TreeMutNodeComplement.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-TreeMutNodeComplement.Tpo $(DEPDIR)/libecf_la-TreeMutNodeComplement.Plo
#	$(AM_V_CXX)source='tree/TreeMutNodeComplement.cpp' object='libecf_la-TreeMutNodeComplement.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-TreeMutNodeComplement.lo `test -f 'tree/TreeMutNodeComplement.cpp' || echo '$(srcdir)/'`tree/TreeMutNodeComplement.cpp

libecf_la-TreeMutNodeReplace.lo: tree/TreeMutNodeReplace.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-TreeMutNodeReplace.lo -MD -MP -MF $(DEPDIR)/libecf_la-TreeMutNodeReplace.Tpo -c -o libecf_la-TreeMutNodeReplace.lo `test -f 'tree/TreeMutNodeReplace.cpp' || echo '$(srcdir)/'`tree/TreeMutNodeReplace.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-TreeMutNodeReplace.Tpo $(DEPDIR)/libecf_la-TreeMutNodeReplace.Plo
#	$(AM_V_CXX)source='tree/TreeMutNodeReplace.cpp' object='libecf_la-TreeMutNodeReplace.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-TreeMutNodeReplace.lo `test -f 'tree/TreeMutNodeReplace.cpp' || echo '$(srcdir)/'`tree/TreeMutNodeReplace.cpp

libecf_la-TreeMutShrink.lo: tree/TreeMutShrink.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-TreeMutShrink.lo -MD -MP -MF $(DEPDIR)/libecf_la-TreeMutShrink.Tpo -c -o libecf_la-TreeMutShrink.lo `test -f 'tree/TreeMutShrink.cpp' || echo '$(srcdir)/'`tree/TreeMutShrink.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-TreeMutShrink.Tpo $(DEPDIR)/libecf_la-TreeMutShrink.Plo
#	$(AM_V_CXX)source='tree/TreeMutShrink.cpp' object='libecf_la-TreeMutShrink.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-TreeMutShrink.lo `test -f 'tree/TreeMutShrink.cpp' || echo '$(srcdir)/'`tree/TreeMutShrink.cpp

libecf_la-TreeMutSubtree.lo: tree/TreeMutSubtree.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-TreeMutSubtree.lo -MD -MP -MF $(DEPDIR)/libecf_la-TreeMutSubtree.Tpo -c -o libecf_la-TreeMutSubtree.lo `test -f 'tree/TreeMutSubtree.cpp' || echo '$(srcdir)/'`tree/TreeMutSubtree.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-TreeMutSubtree.Tpo $(DEPDIR)/libecf_la-TreeMutSubtree.Plo
#	$(AM_V_CXX)source='tree/TreeMutSubtree.cpp' object='libecf_la-TreeMutSubtree.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-TreeMutSubtree.lo `test -f 'tree/TreeMutSubtree.cpp' || echo '$(srcdir)/'`tree/TreeMutSubtree.cpp

libecf_la-Permutation.lo: permutation/Permutation.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-Permutation.lo -MD -MP -MF $(DEPDIR)/libecf_la-Permutation.Tpo -c -o libecf_la-Permutation.lo `test -f 'permutation/Permutation.cpp' || echo '$(srcdir)/'`permutation/Permutation.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-Permutation.Tpo $(DEPDIR)/libecf_la-Permutation.Plo
#	$(AM_V_CXX)source='permutation/Permutation.cpp' object='libecf_la-Permutation.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-Permutation.lo `test -f 'permutation/Permutation.cpp' || echo '$(srcdir)/'`permutation/Permutation.cpp

libecf_la-PermutationCrsCOSA.lo: permutation/PermutationCrsCOSA.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-PermutationCrsCOSA.lo -MD -MP -MF $(DEPDIR)/libecf_la-PermutationCrsCOSA.Tpo -c -o libecf_la-PermutationCrsCOSA.lo `test -f 'permutation/PermutationCrsCOSA.cpp' || echo '$(srcdir)/'`permutation/PermutationCrsCOSA.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-PermutationCrsCOSA.Tpo $(DEPDIR)/libecf_la-PermutationCrsCOSA.Plo
#	$(AM_V_CXX)source='permutation/PermutationCrsCOSA.cpp' object='libecf_la-PermutationCrsCOSA.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-PermutationCrsCOSA.lo `test -f 'permutation/PermutationCrsCOSA.cpp' || echo '$(srcdir)/'`permutation/PermutationCrsCOSA.cpp

libecf_la-PermutationCrsCyclic.lo: permutation/PermutationCrsCyclic.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-PermutationCrsCyclic.lo -MD -MP -MF $(DEPDIR)/libecf_la-PermutationCrsCyclic.Tpo -c -o libecf_la-PermutationCrsCyclic.lo `test -f 'permutation/PermutationCrsCyclic.cpp' || echo '$(srcdir)/'`permutation/PermutationCrsCyclic.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-PermutationCrsCyclic.Tpo $(DEPDIR)/libecf_la-PermutationCrsCyclic.Plo
#	$(AM_V_CXX)source='permutation/PermutationCrsCyclic.cpp' object='libecf_la-PermutationCrsCyclic.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-PermutationCrsCyclic.lo `test -f 'permutation/PermutationCrsCyclic.cpp' || echo '$(srcdir)/'`permutation/PermutationCrsCyclic.cpp

libecf_la-PermutationCrsCyclic2.lo: permutation/PermutationCrsCyclic2.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-PermutationCrsCyclic2.lo -MD -MP -MF $(DEPDIR)/libecf_la-PermutationCrsCyclic2.Tpo -c -o libecf_la-PermutationCrsCyclic2.lo `test -f 'permutation/PermutationCrsCyclic2.cpp' || echo '$(srcdir)/'`permutation/PermutationCrsCyclic2.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-PermutationCrsCyclic2.Tpo $(DEPDIR)/libecf_la-PermutationCrsCyclic2.Plo
#	$(AM_V_CXX)source='permutation/PermutationCrsCyclic2.cpp' object='libecf_la-PermutationCrsCyclic2.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-PermutationCrsCyclic2.lo `test -f 'permutation/PermutationCrsCyclic2.cpp' || echo '$(srcdir)/'`permutation/PermutationCrsCyclic2.cpp

libecf_la-PermutationCrsDPX.lo: permutation/PermutationCrsDPX.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-PermutationCrsDPX.lo -MD -MP -MF $(DEPDIR)/libecf_la-PermutationCrsDPX.Tpo -c -o libecf_la-PermutationCrsDPX.lo `test -f 'permutation/PermutationCrsDPX.cpp' || echo '$(srcdir)/'`permutation/PermutationCrsDPX.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-PermutationCrsDPX.Tpo $(DEPDIR)/libecf_la-PermutationCrsDPX.Plo
#	$(AM_V_CXX)source='permutation/PermutationCrsDPX.cpp' object='libecf_la-PermutationCrsDPX.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-PermutationCrsDPX.lo `test -f 'permutation/PermutationCrsDPX.cpp' || echo '$(srcdir)/'`permutation/PermutationCrsDPX.cpp

libecf_la-PermutationCrsOBX.lo: permutation/PermutationCrsOBX.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-PermutationCrsOBX.lo -MD -MP -MF $(DEPDIR)/libecf_la-PermutationCrsOBX.Tpo -c -o libecf_la-PermutationCrsOBX.lo `test -f 'permutation/PermutationCrsOBX.cpp' || echo '$(srcdir)/'`permutation/PermutationCrsOBX.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-PermutationCrsOBX.Tpo $(DEPDIR)/libecf_la-PermutationCrsOBX.Plo
#	$(AM_V_CXX)source='permutation/PermutationCrsOBX.cpp' object='libecf_la-PermutationCrsOBX.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-PermutationCrsOBX.lo `test -f 'permutation/PermutationCrsOBX.cpp' || echo '$(srcdir)/'`permutation/PermutationCrsOBX.cpp

libecf_la-PermutationCrsOPX.lo: permutation/PermutationCrsOPX.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-PermutationCrsOPX.lo -MD -MP -MF $(DEPDIR)/libecf_la-PermutationCrsOPX.Tpo -c -o libecf_la-PermutationCrsOPX.lo `test -f 'permutation/PermutationCrsOPX.cpp' || echo '$(srcdir)/'`permutation/PermutationCrsOPX.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-PermutationCrsOPX.Tpo $(DEPDIR)/libecf_la-PermutationCrsOPX.Plo
#	$(AM_V_CXX)source='permutation/PermutationCrsOPX.cpp' object='libecf_la-PermutationCrsOPX.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-PermutationCrsOPX.lo `test -f 'permutation/PermutationCrsOPX.cpp' || echo '$(srcdir)/'`permutation/PermutationCrsOPX.cpp

libecf_la-PermutationCrsOX.lo: permutation/PermutationCrsOX.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-PermutationCrsOX.lo -MD -MP -MF $(DEPDIR)/libecf_la-PermutationCrsOX.Tpo -c -o libecf_la-PermutationCrsOX.lo `test -f 'permutation/PermutationCrsOX.cpp' || echo '$(srcdir)/'`permutation/PermutationCrsOX.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-PermutationCrsOX.Tpo $(DEPDIR)/libecf_la-PermutationCrsOX.Plo
#	$(AM_V_CXX)source='permutation/PermutationCrsOX.cpp' object='libecf_la-PermutationCrsOX.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-PermutationCrsOX.lo `test -f 'permutation/PermutationCrsOX.cpp' || echo '$(srcdir)/'`permutation/PermutationCrsOX.cpp

libecf_la-PermutationCrsOX2.lo: permutation/PermutationCrsOX2.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-PermutationCrsOX2.lo -MD -MP -MF $(DEPDIR)/libecf_la-PermutationCrsOX2.Tpo -c -o libecf_la-PermutationCrsOX2.lo `test -f 'permutation/PermutationCrsOX2.cpp' || echo '$(srcdir)/'`permutation/PermutationCrsOX2.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-PermutationCrsOX2.Tpo $(DEPDIR)/libecf_la-PermutationCrsOX2.Plo
#	$(AM_V_CXX)source='permutation/PermutationCrsOX2.cpp' object='libecf_la-PermutationCrsOX2.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-PermutationCrsOX2.lo `test -f 'permutation/PermutationCrsOX2.cpp' || echo '$(srcdir)/'`permutation/PermutationCrsOX2.cpp

libecf_la-PermutationCrsPBX.lo: permutation/PermutationCrsPBX.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-PermutationCrsPBX.lo -MD -MP -MF $(DEPDIR)/libecf_la-PermutationCrsPBX.Tpo -c -o libecf_la-PermutationCrsPBX.lo `test -f 'permutation/PermutationCrsPBX.cpp' || echo '$(srcdir)/'`permutation/PermutationCrsPBX.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-PermutationCrsPBX.Tpo $(DEPDIR)/libecf_la-PermutationCrsPBX.Plo
#	$(AM_V_CXX)source='permutation/PermutationCrsPBX.cpp' object='libecf_la-PermutationCrsPBX.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-PermutationCrsPBX.lo `test -f 'permutation/PermutationCrsPBX.cpp' || echo '$(srcdir)/'`permutation/PermutationCrsPBX.cpp

libecf_la-PermutationCrsPMX.lo: permutation/PermutationCrsPMX.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-PermutationCrsPMX.lo -MD -MP -MF $(DEPDIR)/libecf_la-PermutationCrsPMX.Tpo -c -o libecf_la-PermutationCrsPMX.lo `test -f 'permutation/PermutationCrsPMX.cpp' || echo '$(srcdir)/'`permutation/PermutationCrsPMX.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-PermutationCrsPMX.Tpo $(DEPDIR)/libecf_la-PermutationCrsPMX.Plo
#	$(AM_V_CXX)source='permutation/PermutationCrsPMX.cpp' object='libecf_la-PermutationCrsPMX.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-PermutationCrsPMX.lo `test -f 'permutation/PermutationCrsPMX.cpp' || echo '$(srcdir)/'`permutation/PermutationCrsPMX.cpp

libecf_la-PermutationCrsSPX.lo: permutation/PermutationCrsSPX.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-PermutationCrsSPX.lo -MD -MP -MF $(DEPDIR)/libecf_la-PermutationCrsSPX.Tpo -c -o libecf_la-PermutationCrsSPX.lo `test -f 'permutation/PermutationCrsSPX.cpp' || echo '$(srcdir)/'`permutation/PermutationCrsSPX.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-PermutationCrsSPX.Tpo $(DEPDIR)/libecf_la-PermutationCrsSPX.Plo
#	$(AM_V_CXX)source='permutation/PermutationCrsSPX.cpp' object='libecf_la-PermutationCrsSPX.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-PermutationCrsSPX.lo `test -f 'permutation/PermutationCrsSPX.cpp' || echo '$(srcdir)/'`permutation/PermutationCrsSPX.cpp

libecf_la-PermutationCrsULX.lo: permutation/PermutationCrsULX.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-PermutationCrsULX.lo -MD -MP -MF $(DEPDIR)/libecf_la-PermutationCrsULX.Tpo -c -o libecf_la-PermutationCrsULX.lo `test -f 'permutation/PermutationCrsULX.cpp' || echo '$(srcdir)/'`permutation/PermutationCrsULX.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-PermutationCrsULX.Tpo $(DEPDIR)/libecf_la-PermutationCrsULX.Plo
#	$(AM_V_CXX)source='permutation/PermutationCrsULX.cpp' object='libecf_la-PermutationCrsULX.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-PermutationCrsULX.lo `test -f 'permutation/PermutationCrsULX.cpp' || echo '$(srcdir)/'`permutation/PermutationCrsULX.cpp

libecf_la-PermutationCrsUPMX.lo: permutation/PermutationCrsUPMX.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-PermutationCrsUPMX.lo -MD -MP -MF $(DEPDIR)/libecf_la-PermutationCrsUPMX.Tpo -c -o libecf_la-PermutationCrsUPMX.lo `test -f 'permutation/PermutationCrsUPMX.cpp' || echo '$(srcdir)/'`permutation/PermutationCrsUPMX.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-PermutationCrsUPMX.Tpo $(DEPDIR)/libecf_la-PermutationCrsUPMX.Plo
#	$(AM_V_CXX)source='permutation/PermutationCrsUPMX.cpp' object='libecf_la-PermutationCrsUPMX.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-PermutationCrsUPMX.lo `test -f 'permutation/PermutationCrsUPMX.cpp' || echo '$(srcdir)/'`permutation/PermutationCrsUPMX.cpp

libecf_la-PermutationMutIns.lo: permutation/PermutationMutIns.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-PermutationMutIns.lo -MD -MP -MF $(DEPDIR)/libecf_la-PermutationMutIns.Tpo -c -o libecf_la-PermutationMutIns.lo `test -f 'permutation/PermutationMutIns.cpp' || echo '$(srcdir)/'`permutation/PermutationMutIns.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-PermutationMutIns.Tpo $(DEPDIR)/libecf_la-PermutationMutIns.Plo
#	$(AM_V_CXX)source='permutation/PermutationMutIns.cpp' object='libecf_la-PermutationMutIns.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-PermutationMutIns.lo `test -f 'permutation/PermutationMutIns.cpp' || echo '$(srcdir)/'`permutation/PermutationMutIns.cpp

libecf_la-PermutationMutInv.lo: permutation/PermutationMutInv.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-PermutationMutInv.lo -MD -MP -MF $(DEPDIR)/libecf_la-PermutationMutInv.Tpo -c -o libecf_la-PermutationMutInv.lo `test -f 'permutation/PermutationMutInv.cpp' || echo '$(srcdir)/'`permutation/PermutationMutInv.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-PermutationMutInv.Tpo $(DEPDIR)/libecf_la-PermutationMutInv.Plo
#	$(AM_V_CXX)source='permutation/PermutationMutInv.cpp' object='libecf_la-PermutationMutInv.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-PermutationMutInv.lo `test -f 'permutation/PermutationMutInv.cpp' || echo '$(srcdir)/'`permutation/PermutationMutInv.cpp

libecf_la-PermutationMutToggle.lo: permutation/PermutationMutToggle.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-PermutationMutToggle.lo -MD -MP -MF $(DEPDIR)/libecf_la-PermutationMutToggle.Tpo -c -o libecf_la-PermutationMutToggle.lo `test -f 'permutation/PermutationMutToggle.cpp' || echo '$(srcdir)/'`permutation/PermutationMutToggle.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-PermutationMutToggle.Tpo $(DEPDIR)/libecf_la-PermutationMutToggle.Plo
#	$(AM_V_CXX)source='permutation/PermutationMutToggle.cpp' object='libecf_la-PermutationMutToggle.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-PermutationMutToggle.lo `test -f 'permutation/PermutationMutToggle.cpp' || echo '$(srcdir)/'`permutation/PermutationMutToggle.cpp

libecf_la-xmlParser.lo: xml/xmlParser.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-xmlParser.lo -MD -MP -MF $(DEPDIR)/libecf_la-xmlParser.Tpo -c -o libecf_la-xmlParser.lo `test -f 'xml/xmlParser.cpp' || echo '$(srcdir)/'`xml/xmlParser.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-xmlParser.Tpo $(DEPDIR)/libecf_la-xmlParser.Plo
#	$(AM_V_CXX)source='xml/xmlParser.cpp' object='libecf_la-xmlParser.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-xmlParser.lo `test -f 'xml/xmlParser.cpp' || echo '$(srcdir)/'`xml/xmlParser.cpp

libecf_la-AlgXCS.lo: xcs/AlgXCS.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-AlgXCS.lo -MD -MP -MF $(DEPDIR)/libecf_la-AlgXCS.Tpo -c -o libecf_la-AlgXCS.lo `test -f 'xcs/AlgXCS.cpp' || echo '$(srcdir)/'`xcs/AlgXCS.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-AlgXCS.Tpo $(DEPDIR)/libecf_la-AlgXCS.Plo
#	$(AM_V_CXX)source='xcs/AlgXCS.cpp' object='libecf_la-AlgXCS.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-AlgXCS.lo `test -f 'xcs/AlgXCS.cpp' || echo '$(srcdir)/'`xcs/AlgXCS.cpp

libecf_la-Classifier.lo: xcs/Classifier.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-Classifier.lo -MD -MP -MF $(DEPDIR)/libecf_la-Classifier.Tpo -c -o libecf_la-Classifier.lo `test -f 'xcs/Classifier.cpp' || echo '$(srcdir)/'`xcs/Classifier.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-Classifier.Tpo $(DEPDIR)/libecf_la-Classifier.Plo
#	$(AM_V_CXX)source='xcs/Classifier.cpp' object='libecf_la-Classifier.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-Classifier.lo `test -f 'xcs/Classifier.cpp' || echo '$(srcdir)/'`xcs/Classifier.cpp

libecf_la-Environment.lo: xcs/Environment.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-Environment.lo -MD -MP -MF $(DEPDIR)/libecf_la-Environment.Tpo -c -o libecf_la-Environment.lo `test -f 'xcs/Environment.cpp' || echo '$(srcdir)/'`xcs/Environment.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-Environment.Tpo $(DEPDIR)/libecf_la-Environment.Plo
#	$(AM_V_CXX)source='xcs/Environment.cpp' object='libecf_la-Environment.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-Environment.lo `test -f 'xcs/Environment.cpp' || echo '$(srcdir)/'`xcs/Environment.cpp

libecf_la-XCSParams.lo: xcs/XCSParams.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-XCSParams.lo -MD -MP -MF $(DEPDIR)/libecf_la-XCSParams.Tpo -c -o libecf_la-XCSParams.lo `test -f 'xcs/XCSParams.cpp' || echo '$(srcdir)/'`xcs/XCSParams.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-XCSParams.Tpo $(DEPDIR)/libecf_la-XCSParams.Plo
#	$(AM_V_CXX)source='xcs/XCSParams.cpp' object='libecf_la-XCSParams.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-XCSParams.lo `test -f 'xcs/XCSParams.cpp' || echo '$(srcdir)/'`xcs/XCSParams.cpp

libecf_la-AlgAEliGPEA2.lo: AlgAEliGPEA2.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-AlgAEliGPEA2.lo -MD -MP -MF $(DEPDIR)/libecf_la-AlgAEliGPEA2.Tpo -c -o libecf_la-AlgAEliGPEA2.lo `test -f 'AlgAEliGPEA2.cpp' || echo '$(srcdir)/'`AlgAEliGPEA2.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-AlgAEliGPEA2.Tpo $(DEPDIR)/libecf_la-AlgAEliGPEA2.Plo
#	$(AM_V_CXX)source='AlgAEliGPEA2.cpp' object='libecf_la-AlgAEliGPEA2.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-AlgAEliGPEA2.lo `test -f 'AlgAEliGPEA2.cpp' || echo '$(srcdir)/'`AlgAEliGPEA2.cpp

libecf_la-AlgAEliGPEA.lo: AlgAEliGPEA.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-AlgAEliGPEA.lo -MD -MP -MF $(DEPDIR)/libecf_la-AlgAEliGPEA.Tpo -c -o libecf_la-AlgAEliGPEA.lo `test -f 'AlgAEliGPEA.cpp' || echo '$(srcdir)/'`AlgAEliGPEA.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-AlgAEliGPEA.Tpo $(DEPDIR)/libecf_la-AlgAEliGPEA.Plo
#	$(AM_V_CXX)source='AlgAEliGPEA.cpp' object='libecf_la-AlgAEliGPEA.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-AlgAEliGPEA.lo `test -f 'AlgAEliGPEA.cpp' || echo '$(srcdir)/'`AlgAEliGPEA.cpp

libecf_la-AlgSGenGPEA.lo: AlgSGenGPEA.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-AlgSGenGPEA.lo -MD -MP -MF $(DEPDIR)/libecf_la-AlgSGenGPEA.Tpo -c -o libecf_la-AlgSGenGPEA.lo `test -f 'AlgSGenGPEA.cpp' || echo '$(srcdir)/'`AlgSGenGPEA.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-AlgSGenGPEA.Tpo $(DEPDIR)/libecf_la-AlgSGenGPEA.Plo
#	$(AM_V_CXX)source='AlgSGenGPEA.cpp' object='libecf_la-AlgSGenGPEA.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-AlgSGenGPEA.lo `test -f 'AlgSGenGPEA.cpp' || echo '$(srcdir)/'`AlgSGenGPEA.cpp

libecf_la-Communicator.lo: Communicator.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libecf_la-Communicator.lo -MD -MP -MF $(DEPDIR)/libecf_la-Communicator.Tpo -c -o libecf_la-Communicator.lo `test -f 'Communicator.cpp' || echo '$(srcdir)/'`Communicator.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libecf_la-Communicator.Tpo $(DEPDIR)/libecf_la-Communicator.Plo
#	$(AM_V_CXX)source='Communicator.cpp' object='libecf_la-Communicator.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libecf_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libecf_la-Communicator.lo `test -f 'Communicator.cpp' || echo '$(srcdir)/'`Communicator.cpp

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-pkginclude_binaryHEADERS: $(pkginclude_binary_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(pkginclude_binary_HEADERS)'; test -n "$(pkginclude_binarydir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkginclude_binarydir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkginclude_binarydir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(pkginclude_binarydir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(pkginclude_binarydir)" || exit $$?; \
	done

uninstall-pkginclude_binaryHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(pkginclude_binary_HEADERS)'; test -n "$(pkginclude_binarydir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pkginclude_binarydir)'; $(am__uninstall_files_from_dir)
install-pkginclude_bitstringHEADERS: $(pkginclude_bitstring_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(pkginclude_bitstring_HEADERS)'; test -n "$(pkginclude_bitstringdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkginclude_bitstringdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkginclude_bitstringdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(pkginclude_bitstringdir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(pkginclude_bitstringdir)" || exit $$?; \
	done

uninstall-pkginclude_bitstringHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(pkginclude_bitstring_HEADERS)'; test -n "$(pkginclude_bitstringdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pkginclude_bitstringdir)'; $(am__uninstall_files_from_dir)
install-pkginclude_floatingpointHEADERS: $(pkginclude_floatingpoint_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(pkginclude_floatingpoint_HEADERS)'; test -n "$(pkginclude_floatingpointdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkginclude_floatingpointdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkginclude_floatingpointdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(pkginclude_floatingpointdir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(pkginclude_floatingpointdir)" || exit $$?; \
	done

uninstall-pkginclude_floatingpointHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(pkginclude_floatingpoint_HEADERS)'; test -n "$(pkginclude_floatingpointdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pkginclude_floatingpointdir)'; $(am__uninstall_files_from_dir)
install-pkginclude_mainHEADERS: $(pkginclude_main_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(pkginclude_main_HEADERS)'; test -n "$(pkginclude_maindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkginclude_maindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkginclude_maindir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(pkginclude_maindir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(pkginclude_maindir)" || exit $$?; \
	done

uninstall-pkginclude_mainHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(pkginclude_main_HEADERS)'; test -n "$(pkginclude_maindir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pkginclude_maindir)'; $(am__uninstall_files_from_dir)
install-pkginclude_permutationHEADERS: $(pkginclude_permutation_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(pkginclude_permutation_HEADERS)'; test -n "$(pkginclude_permutationdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkginclude_permutationdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkginclude_permutationdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(pkginclude_permutationdir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(pkginclude_permutationdir)" || exit $$?; \
	done

uninstall-pkginclude_permutationHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(pkginclude_permutation_HEADERS)'; test -n "$(pkginclude_permutationdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pkginclude_permutationdir)'; $(am__uninstall_files_from_dir)
install-pkginclude_treeHEADERS: $(pkginclude_tree_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(pkginclude_tree_HEADERS)'; test -n "$(pkginclude_treedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkginclude_treedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkginclude_treedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(pkginclude_treedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(pkginclude_treedir)" || exit $$?; \
	done

uninstall-pkginclude_treeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(pkginclude_tree_HEADERS)'; test -n "$(pkginclude_treedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pkginclude_treedir)'; $(am__uninstall_files_from_dir)
install-pkginclude_xcsHEADERS: $(pkginclude_xcs_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(pkginclude_xcs_HEADERS)'; test -n "$(pkginclude_xcsdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkginclude_xcsdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkginclude_xcsdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(pkginclude_xcsdir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(pkginclude_xcsdir)" || exit $$?; \
	done

uninstall-pkginclude_xcsHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(pkginclude_xcs_HEADERS)'; test -n "$(pkginclude_xcsdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pkginclude_xcsdir)'; $(am__uninstall_files_from_dir)
install-pkginclude_xmlHEADERS: $(pkginclude_xml_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(pkginclude_xml_HEADERS)'; test -n "$(pkginclude_xmldir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkginclude_xmldir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkginclude_xmldir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(pkginclude_xmldir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(pkginclude_xmldir)" || exit $$?; \
	done

uninstall-pkginclude_xmlHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(pkginclude_xml_HEADERS)'; test -n "$(pkginclude_xmldir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pkginclude_xmldir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(pkginclude_binarydir)" "$(DESTDIR)$(pkginclude_bitstringdir)" "$(DESTDIR)$(pkginclude_floatingpointdir)" "$(DESTDIR)$(pkginclude_maindir)" "$(DESTDIR)$(pkginclude_permutationdir)" "$(DESTDIR)$(pkginclude_treedir)" "$(DESTDIR)$(pkginclude_xcsdir)" "$(DESTDIR)$(pkginclude_xmldir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-pkginclude_binaryHEADERS \
	install-pkginclude_bitstringHEADERS \
	install-pkginclude_floatingpointHEADERS \
	install-pkginclude_mainHEADERS \
	install-pkginclude_permutationHEADERS \
	install-pkginclude_treeHEADERS install-pkginclude_xcsHEADERS \
	install-pkginclude_xmlHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-libLTLIBRARIES \
	uninstall-pkginclude_binaryHEADERS \
	uninstall-pkginclude_bitstringHEADERS \
	uninstall-pkginclude_floatingpointHEADERS \
	uninstall-pkginclude_mainHEADERS \
	uninstall-pkginclude_permutationHEADERS \
	uninstall-pkginclude_treeHEADERS \
	uninstall-pkginclude_xcsHEADERS \
	uninstall-pkginclude_xmlHEADERS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean clean-generic \
	clean-libLTLIBRARIES clean-libtool cscopelist-am ctags \
	ctags-am distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-libLTLIBRARIES install-man install-pdf \
	install-pdf-am install-pkginclude_binaryHEADERS \
	install-pkginclude_bitstringHEADERS \
	install-pkginclude_floatingpointHEADERS \
	install-pkginclude_mainHEADERS \
	install-pkginclude_permutationHEADERS \
	install-pkginclude_treeHEADERS install-pkginclude_xcsHEADERS \
	install-pkginclude_xmlHEADERS install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags tags-am uninstall uninstall-am \
	uninstall-libLTLIBRARIES uninstall-pkginclude_binaryHEADERS \
	uninstall-pkginclude_bitstringHEADERS \
	uninstall-pkginclude_floatingpointHEADERS \
	uninstall-pkginclude_mainHEADERS \
	uninstall-pkginclude_permutationHEADERS \
	uninstall-pkginclude_treeHEADERS \
	uninstall-pkginclude_xcsHEADERS \
	uninstall-pkginclude_xmlHEADERS

.PRECIOUS: Makefile


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
